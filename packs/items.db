{"name":"Generate an NPC","type":"script","scope":"global","author":"NbJ83QqO5LxARCdR","img":"icons/svg/aura.svg","command":"// Check if a folder named \"NPC\" exists\nlet npcFolder = game.folders.find(folder => folder.name === \"NPC\" && folder.type === \"Actor\");\n\n// If the folder doesn't exist, create it\nif (!npcFolder) {\n  npcFolder = await Folder.create({ name: \"NPC\", type: \"Actor\", parent: null });\n}\n\n\n// Define the first names, last names, and image directories for each faction and gender\nlet factions = {\n    \"Soviet\": {\n        \"Male\": {\n            firstNames: ['Ivan', 'Alexei', 'Dmitri', 'Sergei', 'Nikolai', 'Vladimir', 'Mikhail', 'Anatoli', 'Yuri', 'Andrei', 'Boris', 'Leonid', 'Evgeni', 'Viktor', 'Igor', 'Valentin', 'Fyodor', 'Anton', 'Pavel', 'Yevgeny', 'Arkady', 'Georgy', 'Vasily', 'Konstantin', 'Oleg', 'Aleksandr', 'Gennady', 'Yaroslav', 'Vadim', 'Valery', 'Grigori', 'Vasili', 'Maksim', 'Aleksander', 'Semyon', 'Pyotr', 'Vitali', 'Roman', 'Kirill', 'Lev', 'Anatoly', 'Stepan', 'Ruslan', 'Vladislav', 'Nikita', 'Sergey', 'Ilya', 'Mark', 'Vlad', 'Aleksei', 'Artem', 'Vyacheslav', 'Makar', 'Miroslav', 'Sviatoslav', 'Yakov', 'Rurik', 'Anatol', 'Nestor', 'Bogdan', 'Radomir', 'Bogdan', 'Iosif', 'Yan', 'Efim', 'Lavrenti', 'Matvei', 'Sava', 'Timofei', 'Foma', 'Ipati', 'Feodor', 'Vasiliy', 'Gerasim', 'Leonti', 'Kliment', 'Ignati', 'Afanasi', 'Aleksey', 'Feofan', 'Rodion', 'Marat', 'Gavriil', 'Terenti', 'Savva', 'Serafim', 'Zinovi', 'Prokhor', 'Venedikt', 'German', 'Vsevolod', 'Innokenti', 'Luka', 'Vitaly', 'Demyan', 'Ermolai', 'Rostislav', 'Filipp', 'Tikhon', 'Mstislav', 'Alek', 'Svyatoslav', 'Veniamin', 'Isaak', 'Agafon', 'Grigory', 'Platon'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Soviet/Male'\n        },\n        \"Female\": {\n            firstNames: ['Anastasia', 'Ekaterina', 'Maria', 'Anna', 'Elena', 'Olga', 'Irina', 'Svetlana', 'Natalia', 'Ludmila', 'Galina', 'Tatiana', 'Yulia', 'Valentina', 'Daria', 'Sofia', 'Alina', 'Vera', 'Marina', 'Polina', 'Elizaveta', 'Alexandra', 'Larisa', 'Inna', 'Ksenia', 'Victoria', 'Nadezhda', 'Lyudmila', 'Violetta', 'Yana', 'Alla', 'Valeria', 'Karina', 'Oksana', 'Evgenia', 'Lilia', 'Alyona', 'Margarita', 'Kristina', 'Svetlana', 'Taisiya', 'Zinaida', 'Raisa', 'Yelena', 'Zoya', 'Nina', 'Rimma', 'Lyubov', 'Antonina', 'Izabella', 'Anzhelika', 'Serafima', 'Ekaterina', 'Evgeniya', 'Nataliya', 'Kira', 'Veronika', 'Ivanna', 'Diana', 'Angelina', 'Roxana', 'Nelli', 'Elvira', 'Yaroslava', 'Olesya', 'Mila', 'Liana', 'Alisa', 'Anfisa', 'Miroslava', 'Klara', 'Yuliana', 'Anita', 'Aglaya', 'Alevtina', 'Anaida', 'Anait', 'Anastasiya', 'Anelia', 'Angela', 'Anisa', 'Anka', 'Antonia', 'Ariadna', 'Arina', 'Asya', 'Augusta', 'Aurelia', 'Avdotya', 'Aventina', 'Aza', 'Aziza', 'Barbara', 'Bella', 'Bogdana', 'Boleslava', 'Borislava', 'Bronislava', 'Vasilisa', 'Vladislava', 'Yadviga', 'Yanina', 'Yarina', 'Yevdokiya', 'Zemfira', 'Zlata', 'Zoika', 'Zoya'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Soviet/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Ivanov', 'Petrov', 'Sidorov', 'Kuznetsov', 'Popov', 'Vasiliev', 'Smirnov', 'Kozlov', 'Novikov', 'Morozov', 'Volkov', 'Solovyov', 'Voronov', 'Ermakov', 'Nikitin', 'Sokolov', 'Mikhailov', 'Fedorov', 'Dmitriev', 'Alexeev', 'Semenov', 'Lebedev', 'Egorov', 'Pavlov', 'Konovalov', 'Stepanov', 'Komarov', 'Kiselev', 'Makarov', 'Andreev', 'Osipov', 'Frolov', 'Gerasimov', 'Titov', 'Mironov', 'Vinogradov', 'Kudryavtsev', 'Golubev', 'Ignatiev', 'Kalinin', 'Timofeev', 'Orlov', 'Fomin', 'Uvarov', 'Filippov', 'Spassky', 'Evdokimov', 'Marinin', 'Kulikov', 'Klimov', 'Shestakov', 'Agafonov', 'Anisimov', 'Aksyonov', 'Grigoriev', 'Ponomarev', 'Gusev', 'Sharov', 'Kudryashov', 'Bogdanov', 'Martyanov', 'Borisov', 'Svetlov', 'Tikhonov', 'Kharitonov', 'Simakov', 'Pankratov', 'Nazarov', 'Petrovsky', 'Antonov', 'Blinov', 'Sukhanov', 'Kupriyanov', 'Melnikov', 'Sobolev', 'Kholodov', 'Markov', 'Belousov', 'Yermolov', 'Zaitsev', 'Korolev', 'Samoylov', 'Efremov', 'Ignatov', 'Lykov', 'Molchanov', 'Vishnevsky', 'Jdanov', 'Baranov', 'Komissarov', 'Ovchinnikov', 'Trifonov', 'Savin', 'Lavrentiev', 'Dyachkov', 'Gavrilov', 'Kapustin', 'Andreev', 'Artamonov', 'Yakovlev', 'Mamedov', 'Sizov', 'Goryachev', 'Turov', 'Putyatin'],\n\t}\n    },\n    \"US\": {\n        \"Male\": {\n            firstNames: [ 'James', 'John', 'Robert', 'Michael', 'William', 'David', 'Richard', 'Joseph', 'Thomas', 'Charles', 'Christopher', 'Daniel', 'Matthew', 'Anthony', 'Donald', 'Mark', 'Paul', 'Steven', 'Andrew', 'Kenneth', 'George', 'Joshua', 'Kevin', 'Brian', 'Edward', 'Ronald', 'Timothy', 'Jason', 'Jeffrey', 'Ryan', 'Jacob', 'Gary', 'Nicholas', 'Eric', 'Stephen', 'Jonathan', 'Larry', 'Justin', 'Scott', 'Brandon', 'Benjamin', 'Samuel', 'Frank', 'Gregory', 'Raymond', 'Alexander', 'Patrick', 'Jack', 'Dennis', 'Jerry', 'Tyler', 'Aaron', 'Jose', 'Henry', 'Douglas', 'Adam', 'Peter', 'Nathan', 'Zachary', 'Walter', 'Kyle', 'Harold', 'Carl', 'Jeremy', 'Keith', 'Roger', 'Gerald', 'Ethan', 'Arthur', 'Terry', 'Christian', 'Sean', 'Lawrence', 'Austin', 'Joe','Noah', 'Jesse', 'Albert', 'Bryan', 'Billy', 'Bruce', 'Willie', 'Jordan', 'Dylan', 'Alan', 'Ralph', 'Gabriel', 'Roy', 'Juan', 'Wayne', 'Eugene', 'Logan', 'Randy', 'Louis', 'Russell', 'Vincent', 'Philip', 'Bobby', 'Johnny', 'Bradley'],\n            imgDirectory: 'modules/npc-generator-t2k/images/US/Male'\n        },\n        \"Female\": {\n            firstNames: ['Mary', 'Jennifer', 'Linda', 'Patricia', 'Elizabeth', 'Susan', 'Jessica', 'Sarah', 'Karen', 'Nancy', 'Margaret', 'Lisa', 'Betty', 'Dorothy', 'Sandra', 'Ashley', 'Kimberly', 'Donna', 'Emily', 'Michelle', 'Carol', 'Amanda', 'Melissa', 'Deborah', 'Stephanie', 'Rebecca', 'Laura', 'Helen', 'Sharon', 'Cynthia', 'Kathleen', 'Amy', 'Shirley', 'Angela', 'Anna', 'Ruth', 'Brenda', 'Pamela', 'Nicole', 'Katherine', 'Samantha', 'Christine', 'Emma', 'Catherine', 'Debra', 'Rachel', 'Carolyn', 'Janet', 'Virginia', 'Maria', 'Heather', 'Diane', 'Julie', 'Joyce', 'Victoria', 'Olivia', 'Kelly', 'Christina', 'Lauren', 'Joan', 'Evelyn', 'Judith', 'Megan', 'Cheryl', 'Andrea', 'Hannah', 'Martha', 'Jacqueline', 'Frances', 'Gloria', 'Ann', 'Teresa', 'Kathryn', 'Sara', 'Janice', 'Jean', 'Alice', 'Madison', 'Doris', 'Abigail', 'Julia', 'Judy', 'Grace', 'Denise', 'Amber', 'Marilyn', 'Beverly', 'Danielle', 'Theresa', 'Sophia', 'Marie', 'Diana', 'Brittany', 'Natalie', 'Isabella', 'Charlotte', 'Rose', 'Alexis', 'Kayla'],\n            imgDirectory: 'modules/npc-generator-t2k/images/US/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Garcia', 'Miller', 'Davis', 'Rodriguez', 'Martinez', 'Hernandez', 'Lopez', 'Gonzalez', 'Wilson', 'Anderson', 'Thomas', 'Taylor', 'Moore', 'Jackson', 'Martin', 'Lee', 'Perez', 'Thompson', 'White', 'Harris', 'Sanchez', 'Clark', 'Ramirez', 'Lewis', 'Robinson', 'Walker', 'Young', 'Allen', 'King', 'Wright', 'Scott', 'Torres', 'Nguyen', 'Hill', 'Flores', 'Green', 'Adams', 'Nelson', 'Baker', 'Hall', 'Rivera', 'Campbell', 'Mitchell', 'Carter', 'Roberts', 'Gomez', 'Phillips', 'Evans', 'Turner', 'Diaz', 'Parker', 'Cruz', 'Edwards', 'Collins', 'Reyes', 'Stewart', 'Morris', 'Morales', 'Murphy', 'Cook', 'Rogers', 'Gutierrez', 'Ortiz', 'Morgan', 'Cooper', 'Peterson', 'Bailey', 'Reed', 'Kelly', 'Howard', 'Ramos', 'Kim', 'Cox', 'Ward', 'Richardson', 'Watson', 'Brooks', 'Chavez', 'Wood', 'James', 'Bennett', 'Gray', 'Mendoza', 'Ruiz', 'Hughes', 'Price', 'Alvarez', 'Castillo', 'Sanders', 'Patel', 'Myers', 'Long', 'Ross', 'Foster', 'Jimenez', 'Powell'],\n\t}\n    },\n    \"Poland\": {\n        \"Male\": {\n            firstNames: ['Adam', 'Adrian', 'Albert', 'Aleksander', 'Alfred', 'Andrzej', 'Antoni', 'Arkadiusz', 'Artur', 'Bartek', 'Bartłomiej', 'Benedykt', 'Benjamin', 'Bernard', 'Błażej', 'Bogdan', 'Bolesław', 'Bronisław', 'Cezary', 'Cyprian', 'Cyryl', 'Dalegor', 'Damian', 'Daniel', 'Dariusz', 'Dawid', 'Dominik', 'Dorian', 'Edward', 'Emil', 'Eryk', 'Fabian', 'Feliks', 'Ferdynand', 'Filip', 'Franciszek', 'Gabriel', 'Grzegorz', 'Henryk', 'Hubert', 'Ignacy', 'Igor', 'Iwo', 'Jacek', 'Jakub', 'Jan', 'Janusz', 'Jarosław', 'Jerzy', 'Joachim', 'Józef', 'Julian', 'Kacper', 'Kajetan', 'Karol', 'Kazimierz', 'Konrad', 'Krzysztof', 'Ksawery', 'Lech', 'Leon', 'Leonard', 'Leopold', 'Leszek', 'Ludwik', 'Łukasz', 'Maciej', 'Maksymilian', 'Marcin', 'Marek', 'Mariusz', 'Mateusz', 'Michał', 'Mieczysław', 'Mikołaj', 'Miłosz', 'Nikodem', 'Norbert', 'Olaf', 'Olgierd', 'Oscar', 'Patryk', 'Paweł', 'Piotr', 'Przemysław', 'Rafał', 'Robert', 'Ryszard', 'Sebastian', 'Sławomir', 'Stanisław', 'Stefan', 'Szymon', 'Tadeusz', 'Tomasz', 'Tymon', 'Tymoteusz', 'Wiktor', 'Witold', 'Władysław', 'Włodzimierz', 'Wojciech', 'Zbigniew', 'Zdzisław', 'Zenon', 'Zygmunt'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Poland/Male'\n        },\n        \"Female\": {\n            firstNames: ['Anna', 'Maria', 'Katarzyna', 'Małgorzata', 'Agnieszka', 'Barbara', 'Ewa', 'Krystyna', 'Elżbieta', 'Zofia', 'Janina', 'Teresa', 'Danuta', 'Halina', 'Irena', 'Magdalena', 'Joanna', 'Jadwiga', 'Stanisława', 'Bożena', 'Aleksandra', 'Monika', 'Grażyna', 'Stefania', 'Marta', 'Dorota', 'Marzena', 'Beata', 'Natalia', 'Wanda', 'Krzysztofa', 'Justyna', 'Karolina', 'Czesława', 'Kamila', 'Lucyna', 'Jolanta', 'Edyta', 'Alicja', 'Aneta', 'Paulina', 'Sylwia', 'Bożenna', 'Patrycja', 'Bogumiła', 'Eugenia', 'Iwona', 'Marlena', 'Weronika', 'Julianna', 'Emilia', 'Renata', 'Adrianna', 'Kornelia', 'Aldona', 'Milena', 'Elwira', 'Aurelia', 'Gabriela', 'Helena', 'Roksana', 'Angelika', 'Leokadia', 'Wiktoria', 'Zuzanna', 'Romana', 'Kalina', 'Leonia', 'Daria', 'Bogusława', 'Olga', 'Blanka', 'Julia', 'Nadia', 'Melania', 'Eryka', 'Lidia', 'Magda', 'Zdzisława', 'Maja', 'Brygida', 'Liliana', 'Anastazja', 'Rozalia', 'Dagmara', 'Marianna', 'Wiesława', 'Mirela', 'Felicia', 'Klaudia', 'Honorata', 'Ilona', 'Karina', 'Apolonia', 'Dominika', 'Iga', 'Pelagia', 'Tamara', 'Mirosława', 'Sandra', 'Ludwika', 'Cecylia', 'Polina', 'Klara', 'Laura', 'Roza', 'Amanda'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Poland/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Nowak', 'Kowalski', 'Wiśniewski', 'Dąbrowski', 'Lewandowski', 'Wójcik', 'Kamiński', 'Kowalczyk', 'Zieliński', 'Szymański', 'Woźniak', 'Kozłowski', 'Jankowski', 'Wojciechowski', 'Kwiatkowski', 'Kaczmarek', 'Mazur', 'Krawczyk', 'Piotrowski', 'Grabowski', 'Nowakowski', 'Pawłowski', 'Michalski', 'Nowicki', 'Adamczyk', 'Dudek', 'Zając', 'Wieczorek', 'Jabłoński', 'Król', 'Majewski', 'Olszewski', 'Jaworski', 'Wróbel', 'Malinowski', 'Pawlak', 'Witkowski', 'Walczak', 'Stępień', 'Górski', 'Rutkowski', 'Michalak', 'Sikora', 'Ostrowski', 'Baran', 'Duda', 'Szewczyk', 'Tomaszewski', 'Pietrzak', 'Marciniak', 'Wróblewski', 'Zalewski', 'Jakubowski', 'Jasiński', 'Zawadzki', 'Sadowski', 'Bąk', 'Chmielewski', 'Włodarczyk', 'Borkowski', 'Czarnecki', 'Sawicki', 'Sokołowski', 'Urbański', 'Kubiak', 'Maciejewski', 'Szczepański', 'Kucharski', 'Wilk', 'Kalinowski', 'Lis', 'Mazurek', 'Wysocki', 'Adamski', 'Kaźmierczak', 'Wasilewski', 'Sobczak', 'Czerwiński', 'Andrzejewski', 'Cieślak', 'Głowacki', 'Zakrzewski', 'Kołodziej', 'Sikorski', 'Krajewski', 'Gajewski', 'Szymczak', 'Szulc', 'Baranowski', 'Laskowski', 'Brzeziński', 'Makowski', 'Ziółkowski', 'Przybylski', 'Domański', 'Nowacki', 'Borowski', 'Błaszczyk', 'Chojnacki', 'Ciesielski', 'Mróz', 'Szczepaniak', 'Wesołowski', 'Krupa', 'Kaczmarczyk', 'Leszczyński', 'Lipiński', 'Kowalewski'],\n\t}\n    },\n    \"Sweden\": {\n        \"Male\": {\n            firstNames: ['Erik', 'Lars', 'Karl', 'Anders', 'Johan', 'Per', 'Nils', 'Olof', 'Hans', 'Arne', 'Jörgen', 'Björn', 'Thomas', 'Jan', 'Gunnar', 'Göran', 'Marcus', 'Fredrik', 'Mattias', 'Daniel', 'Magnus', 'Mikael', 'Peter', 'Håkan', 'Christer', 'Lennart', 'Stefan', 'Henrik', 'David', 'Kjell', 'Bo', 'Jonas', 'Roland', 'Oskar', 'Leif', 'Tomas', 'Patrik', 'Rolf', 'Kent', 'Sven', 'Martin', 'Ulf', 'Joakim', 'John', 'Ingvar', 'Robert', 'Bertil', 'Rickard', 'Gustav', 'Alexander', 'Benny', 'Ronnie', 'Roger', 'Tommy', 'Harry', 'Tony', 'Conny', 'Frank', 'Jimmy', 'Rune', 'Chrille', 'Billy', 'Morgan', 'Lasse', 'Pelle', 'Bosse', 'Niklas', 'Olle', 'Börje', 'Torbjörn', 'Viktor', 'Åke', 'Hasse', 'Sebastian', 'Robin', 'Jesper', 'Dennis', 'Tobias', 'Simon', 'Anton', 'Niclas', 'Christoffer', 'Urban', 'Stig', 'Pär', 'Uno', 'Åsa', 'Mats', 'Tim', 'Jonathan', 'Bengt', 'Ludvig', 'Eddie', 'Max', 'Emil', 'Linus', 'Ville', 'Samuel', 'Adam', 'Jakob', 'Hampus', 'Gabriel', 'Filip'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Sweden/Male'\n        },\n        \"Female\": {\n            firstNames: ['Maria', 'Anna', 'Margareta', 'Elisabeth', 'Eva', 'Birgitta', 'Kristina', 'Karin', 'Elisabet', 'Marie', 'Ingrid', 'Christina', 'Lena', 'Helena', 'Inger', 'Johanna', 'Sofia', 'Kerstin', 'Marianne', 'Linda', 'Emma', 'Cecilia', 'Katarina', 'Sara', 'Malin', 'Ingegerd', 'Anita', 'Ann', 'Susanne', 'Ulla', 'Mariana', 'Elin', 'Monica', 'Carina', 'Linnéa', 'Camilla', 'Ulrika', 'Siv', 'Emelie', 'Åsa', 'Elsa', 'Annette', 'Hanna', 'Annika', 'Britt', 'Madeleine', 'Viola', 'Ellinor', 'Maj', 'Louise', 'Alice', 'Julia', 'Ebba', 'Agneta', 'Viktoria', 'Isabella', 'Liselotte', 'Gudrun', 'Linnea', 'Therese', 'Charlotta', 'Rut', 'Sonja', 'Magdalena', 'Amanda', 'Carolina', 'Gunilla', 'Nina', 'Astrid', 'Frida', 'Martina', 'Birgit', 'Erika', 'Ida', 'Josefine', 'Yvonne', 'Maud', 'Sigrid', 'Paula', 'Linn', 'Jenny', 'Stina', 'Vera', 'Tove', 'Hedvig', 'Beatrice', 'Klara', 'Anneli', 'Ingela', 'Mia', 'Rebecca', 'Inga', 'Irma', 'Ester', 'Catarina', 'Liselott', 'Solveig', 'Barbro', 'Sylvia', 'Amanda', 'Veronica', 'Caroline', 'Agnes', 'Alexandra'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Sweden/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Andersson', 'Johansson', 'Karlsson', 'Nilsson', 'Eriksson', 'Larsson', 'Olsson', 'Persson', 'Svensson', 'Gustafsson', 'Pettersson', 'Jonsson', 'Jansson', 'Hansson', 'Bengtsson', 'Jönsson', 'Lindberg', 'Jakobsson', 'Magnusson', 'Olofsson', 'Lindström', 'Lindqvist', 'Bergström', 'Lundberg', 'Mattsson', 'Berglund', 'Fredriksson', 'Sandberg', 'Henriksson', 'Forsberg', 'Sjöberg', 'Wallin', 'Engström', 'Axelsson', 'Danielsson', 'Ström', 'Björk', 'Holm', 'Berg', 'Arvidsson', 'Isaksson', 'Fransson', 'Holmberg', 'Lundqvist', 'Månsson', 'Pålsson', 'Löfgren', 'Björklund', 'Hermansson', 'Lundin', 'Sundberg', 'Wikström', 'Samuelsson', 'Bergman', 'Frisk', 'Nyström', 'Gunnarsson', 'Björnsson', 'Eklund', 'Nordström', 'Dahlberg', 'Nyberg', 'Blomqvist', 'Lööf', 'Söderberg', 'Lundström', 'Johnsson', 'Lindgren', 'Eliasson', 'Pihl', 'Hellström', 'Sundström', 'Hedlund', 'Gustavsson', 'Bäckström', 'Lund', 'Söderström', 'Börjesson', 'Falk', 'Gustafson', 'Fält', 'Edlund', 'Malm', 'Svenson', 'Nyman', 'Blom', 'Oskarsson', 'Lind', 'Granberg', 'Bergqvist', 'Lundgren', 'Berggren', 'Bäck', 'Sandström', 'Norberg', 'Andreasson', 'Håkansson', 'Fall', 'Forslund', 'Viklund', 'Lindholm', 'Sundqvist', 'Hellberg'],\n\t}\n    }\n};\n\n// Create a dialog for the user to select a faction, gender, and the number of tokens to create\nlet d = new Dialog({\n    title: 'Generate an NPC',\n    content: `\n        <form>\n            <div class=\"form-group\">\n                <label for=\"faction\">Faction:</label>\n                <select id=\"faction\" name=\"faction\">\n                    <option value=\"Soviet\" selected>Soviet</option>\n                    <option value=\"US\">US</option>\n                    <option value=\"Sweden\">Sweden</option>\n                    <option value=\"Poland\">Poland</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"gender\">Gender:</label>\n                <select id=\"gender\" name=\"gender\">\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Alternate\" selected>Alternate</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"gear\">Gear:</label>\n                <select id=\"gear\" name=\"gear\">\n                    <option value=\"Typical\">Typical</option>\n                    <option value=\"Full suit\">Full suit</option>\n                    <option value=\"Random\" selected>Random</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"number\">Amount:</label>\n                <input id=\"number\" name=\"number\" type=\"number\" min=\"1\" value=\"1\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"pingToken\">Ping:</label>\n                <input type=\"checkbox\" id=\"pingToken\" checked name=\"pingToken\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"panView\">Pan View:</label>\n                <input type=\"checkbox\" id=\"panView\" checked name=\"panView\">\n            </div>\n        </form>\n    `,\n    buttons: {\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: 'Cancel'\n        },\n        ok: {\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: 'Generate',\n            callback: async (html) => {\n                let factionName = html.find('[name=\"faction\"]').val();\n                let gender = html.find('[name=\"gender\"]').val();\n                let randomItems = html.find('[name=\"gear\"]').val();\n                let number = html.find('[name=\"number\"]').val();\n                let pingToken = html.find('[name=\"pingToken\"]');\n                let panView = html.find('[name=\"panView\"]');\n\n                // If \"Alternate\" is selected, alternate between \"Male\" and \"Female\"\n                if (gender === \"Alternate\") {\n                    for (let i = 0; i < number; i++) {\n                        let genderToggle = i % 2 === 0 ? \"Male\" : \"Female\";\n                        let faction = factions[factionName][genderToggle];\n\t\t\t                  let factionboth = factions[factionName][\"Both\"];\n                        await createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView);\n                    }\n                } else {\n                    let faction = factions[factionName][gender];\n\t  \t              let factionboth = factions[factionName][\"Both\"];\n                    for (let i = 0; i < number; i++) {\n                        await createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView);\n                    }\n                }\n            }\n        }\n\n    },\n    default: 'ok'\n});\n\nd.render(true);\n\nasync function createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView) {\n\n    function getRandomElements(array, numElements, factionName) {\n      let result = [];\n      let tempArray = [...array];\n      ranElements = Math.floor(Math.random() * (numElements + 1));\n      if ((factionName=== 'US') || (factionName=== 'Soviet')) {\n        ranElements = 1;\n      } else {\n        ranElements = Math.floor(Math.random() * (numElements + 1));\n      }\n      for (let i = 0; i < ranElements; i++) {\n        if(tempArray.length === 0) break;\n        let index = Math.floor(Math.random() * tempArray.length);\n        result.push(tempArray[index]);\n        tempArray.splice(index, 1);\n      }\n      return result;\n    }\n\n    function skewedRandomAge(min, max, mean, stdDev) {\n      let skewNormal = () => {\n        let u, v, num;\n        do {\n          u = Math.random() * 2 - 1;\n          v = Math.random() * 2 - 1;\n          num = u * u + v * v;\n        } while (num >= 1 || num === 0);\n        num = u * Math.sqrt((-2.0 * Math.log(num)) / num);\n        num = mean + stdDev * num; // Translate and scale\n        num = Math.floor(num); // Convert to integer\n        return Math.max(min, Math.min(num, max)); // Constrain between min and max\n      };\n\n      return skewNormal();\n    }\n\n    // Function to distribute points over an array of skills or attributes\n    function distributePoints(skillsOrAttributes, factionName, minPoints, maxPoints, minValue = 0, maxValue = 4) {\n      const skillScores = ['–', 'D', 'C', 'B', 'A'];\n\n      // First assign the minimum value to all\n      let values = Object.fromEntries(skillsOrAttributes.map(skillOrAttribute => [skillOrAttribute, skillScores[minValue]]));\n\n      let pointsToDistribute = Math.floor(Math.random() * (maxPoints - minPoints + 1) + minPoints);\n\n      // Distribute remaining points randomly\n      while(pointsToDistribute > 0) {\n          let randomSkillOrAttribute = skillsOrAttributes[Math.floor(Math.random() * skillsOrAttributes.length)];\n          let currentValue = skillScores.indexOf(values[randomSkillOrAttribute]);\n\n          // Only add point if we haven't reached the maximum value\n          if (currentValue < maxValue) {\n              values[randomSkillOrAttribute] = skillScores[currentValue + 1];\n              pointsToDistribute--;\n          }\n      }\n       if (factionName === 'Soviet' || factionName === 'US') {\n              if (Math.random() < 0.9 && values['rangedCombat'] !== 'A') {\n                  let currentValue = skillScores.indexOf(values['rangedCombat']);\n                  values['rangedCombat'] = skillScores[currentValue + 1];\n              }\n       }\n        // Transform die score into skill score.\n        for(let key in values) {\n            if(values[key] === '–') {\n                delete values[key]; // remove skills with score '–'\n            } else {\n                values[key] = { score: values[key] };\n            }\n        }\n        return values;\n      }\n\n      let firstName = faction.firstNames[Math.floor(Math.random() * faction.firstNames.length)];\n      let lastName = factionboth.lastNames[Math.floor(Math.random() * factionboth.lastNames.length)];\n\n      let images = await FilePicker.browse(\"data\", faction.imgDirectory);\n      let img = images.files[Math.floor(Math.random() * images.files.length)];\n\n      // Define attributes and skills\n          let attributes = distributePoints(['str', 'agl', 'int', 'emp'], 4, 10, 1); // Attributes start at 'D'\n          let skills = distributePoints(['heavyWeapons', 'closeCombat', 'stamina', 'driving', 'mobility', 'rangedCombat', 'recon', 'survival', 'tech', 'command', 'persuasion', 'medicalAid'], factionName, 4, 10);\n\n      let cufScore = ['D', 'C', 'B', 'A'][Math.floor(Math.random() * 4)];\n\n      let age = skewedRandomAge(16, 70, 25, 10);\n\n      let actorData = {\n          name: `${firstName} ${lastName}`,\n          type: \"npc\",\n          img: img,\n          token: {\n              img: img\n          },\n          system: {\n             attributes: attributes,\n             skills: skills,\n             bio: {\n               nationality: factionName,\n               militaryRank: \"\",\n               age: age\n            },\n            cuf: {\n              score: cufScore\n            },\n          },\n          folder: npcFolder.id, // Assign the actor to the \"NPC\" folder\n      };\n\n      let createdActor = await Actor.create(actorData);\n\n\n      // Fetch the item data for the items we want to assign\n      let itemNames = ['Rifle Butt', 'Knife', 'Unarmed'];\n      let armorItems = [];\n      let factionWeapons = [];\n      let randomWeapons = [];\n      let factionItems = [];\n      let helmetItems = [];\n      let randomHelmet = [];\n\n      if (factionName=== 'Soviet') {\n        factionWeapons = ['AKM', 'AK-74', 'PM Makarov', 'PSM', 'SVD-63 Dragunov', 'PKM'];\n        factionWeightedWeapons = ['AK-74', 'AKM'];\n        typicalSoldierItems = ['AK-74', 'Steel Helmet', 'Fatigues', '5.45x39mm, 30-round Mag'];\n        factionItems = ['Frag Grenade', '7.62x39mm, 30-round Mag', 'Anti Tank Grenade', 'Field Ration', 'Field Ration', 'Clean Water', 'RPG-7V', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Tools, Basic', 'Protective Mask', 'Radiacmeter', 'Chemical Agent Detector', 'Atropine Autoinjector', 'Wild Food', 'Improvised Explosives, 1 Unit', 'Fatigues', 'Smoke Grenade'];\n        armorItems = ['Flak Jacket', 'Plate Vest'];\n        helmetItems = ['Steel Helmet', 'Soviet SSH-68'];\n      } else if (factionName=== 'US') {\n        factionWeapons = ['M16A1', 'M16A2', 'M40A3', 'M4', 'M4A1', 'M1911A1', 'M60', 'M240B'];\n        factionWeightedWeapons = ['M16A1', 'M16A2', 'M4', 'M4A1'];\n        typicalSoldierItems = ['M16A1', 'Kevlar Helmet', 'Fatigues', '5.56x45mm, 30-round Mag'];\n        factionItems = ['Frag Grenade', '5.56x45mm, 30-round Mag', 'Anti Tank Grenade', 'Field Ration','Field Ration', 'Clean Water', 'M72A3 LAW', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Tools, Basic', 'Protective Mask', 'Radiacmeter', 'Chemical Agent Detector', 'Atropine Autoinjector', 'Wild Food', 'Plastic Explosives, 1 Unit', 'M18 Claymore Directional Mine', 'Fatigues', , 'Smoke Grenade'];\n        armorItems = ['Flak Jacket', 'Plate Vest'];\n        helmetItems = ['Kevlar Helmet', 'US PASGT'];\n      } else if (factionName=== 'Sweden') {\n        factionWeapons = ['Rock','Ak 4', 'Ak 5', 'Ag 90','Bolt-action Rifle', 'Double-barrelled Shotgun', 'Double-barrelled Shotgun, sawed-off', 'Police Pistol', 'Service Revolver', 'Pipe Gun (rifle)','Pipe Gun (shotgun)', 'Crossbow', 'Hunting Bow', 'Improvised Bow', 'Axe', 'Spiked Bat', 'Club', 'Lever-action Rifle', 'KSP 90', 'KSP 88', 'Kpist m/45', 'Combat Pistol', 'Zip Gun'];\n        typicalSoldierItems = ['Ak 5', 'Swedish Hjälm 90', 'Fatigues', '5.56x45mm, 30-round Mag'];\n        factionItems = ['Swedish Hjälm 90', '5.56x45mm, 30-round Mag','Pskott m/86', 'Pist 88', 'Frag Grenade', 'Anti Tank Grenade', 'Field Ration', 'Domestic Food', 'Clean Water', 'Domestic Food', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Lockpicks', 'Tools, Basic', 'Fishing Gear', 'Protective Mask',  'Wild Food', 'Dynamite Stick', 'Improvised Explosives, 1 Unit', 'Molotov Cocktail', 'Improvised Grenade'];\n        helmetItems = [];\n        armorItems = [];\n      } else {\n        factionWeapons = ['Rock','AKM (Polish)','P-83','PKM (Polish)','PM-84','PMK-60','RPK (Polish)','SWD','Bolt-action Rifle', 'Double-barrelled Shotgun', 'Double-barrelled Shotgun, sawed-off', 'Police Pistol', 'Service Revolver', 'Pipe Gun (rifle)','Pipe Gun (shotgun)', 'Crossbow', 'Hunting Bow', 'Improvised Bow', 'Axe', 'Spiked Bat', 'Club', 'Lever-action Rifle', 'Combat Pistol', 'Zip Gun'];\n        typicalSoldierItems = ['AKM', 'Polish WZ75', 'Fatigues', '7.62x39mm, 30-round Mag'];\n        factionItems = ['Polish WZ75', '7.62x39mm, 30-round Mag', 'RPG-7V (Polish)','Frag Greanade', 'Anti Tank Grenade', 'Field Ration', 'Domestic Food', 'Clean Water', 'Domestic Food', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Lockpicks', 'Tools, Basic', 'Protective Mask', 'Fishing Gear', 'Wild Food', 'Dynamite Stick', 'Improvised Explosives, 1 Unit', 'Fatigues', 'Molotov Cocktail', 'Improvised Grenade'];\n        helmetItems = [];\n        armorItems = [];\n      }\n\n      if (randomItems === 'Random') {\n        let randomItems = getRandomElements(factionItems, 7);\n        if ((factionName=== 'US') || (factionName=== 'Soviet')) {\n          if (Math.random() < 0.3) {\n            randomWeapons = typicalSoldierItems;\n            randomHelmet = [];\n          } else {\n            randomWeapons = getRandomElements(factionWeightedWeapons, 1, factionName);\n            randomHelmet = getRandomElements(helmetItems, 1);\n          }\n        } else {\n          randomWeapons = getRandomElements(factionWeapons, 1, factionName);\n          randomHelmet = getRandomElements(helmetItems, 1);\n        }\n        if (Math.random() < 0.3) {\n          let randomArmor = getRandomElements(armorItems, 1);\n        } else {\n          randomArmor = [];\n        }\n        itemNames = [...itemNames, ...randomArmor, ...randomHelmet, ...randomItems, ...randomWeapons];\n      } else if (randomItems === 'Typical') {\n        itemNames = [...itemNames, ...typicalSoldierItems];\n      } else {\n        itemNames = [...itemNames, ...armorItems, ...helmetItems, ...factionItems, ...factionWeapons];\n      }\n\n      let items = [];\n      for (let itemName of itemNames) {\n        let item = game.items.getName(itemName);\n        if (item) {\n          items.push(item);\n        }\n      }\n\n      await createdActor.createEmbeddedDocuments(\"Item\", items);\n\n      if (canvas.scene) {\n        // Get the viewed rectangle\n        const viewRect = canvas.dimensions.rect;\n\n        // Calculate the center of the viewed rectangle in grid units\n        const x = viewRect.x + (viewRect.width / 2);\n        const y = viewRect.y + (viewRect.height / 2);\n\n        const tDoc = await createdActor.getTokenDocument({ x:x, y: y });\n        const createdTokens = await canvas.scene.createEmbeddedDocuments('Token', [tDoc]);\n\n        // get the token id\n        let tokenId = createdTokens[0]._id;\n\n        // get the Token instance from the current scene\n        let tokenInstance = canvas.scene.getEmbeddedDocument('Token', tokenId);\n\n        if (panView.is(':checked')) {\n          canvas.animatePan(tokenInstance);\n        }\n        if (pingToken.is(':checked')) {\n          canvas.ping(tokenInstance);\n        }\n\n      } else {\n          console.warn(\"No active scene available to place token.\");\n      }\n\n}","flags":{"core":{"sourceId":"Macro.uGtm1p5bWsZjlMIV"}},"_stats":{"systemId":"t2k4e","systemVersion":"10.2.0","coreVersion":"10.291","createdTime":1685961469660,"modifiedTime":1686068616228,"lastModifiedBy":"NbJ83QqO5LxARCdR"},"ownership":{"default":0,"NbJ83QqO5LxARCdR":3},"folder":null,"sort":0,"_id":"azU20Ap8bAddVWKO"}
{"$$deleted":true,"_id":"azU20Ap8bAddVWKO"}
{"name":"Generate an NPC","type":"script","scope":"global","author":"NbJ83QqO5LxARCdR","img":"icons/svg/aura.svg","command":"// Check if a folder named \"NPC\" exists\nlet npcFolder = game.folders.find(folder => folder.name === \"NPC\" && folder.type === \"Actor\");\n\n// If the folder doesn't exist, create it\nif (!npcFolder) {\n  npcFolder = await Folder.create({ name: \"NPC\", type: \"Actor\", parent: null });\n}\n\n\n// Define the first names, last names, and image directories for each faction and gender\nlet factions = {\n    \"Soviet\": {\n        \"Male\": {\n            firstNames: ['Ivan', 'Alexei', 'Dmitri', 'Sergei', 'Nikolai', 'Vladimir', 'Mikhail', 'Anatoli', 'Yuri', 'Andrei', 'Boris', 'Leonid', 'Evgeni', 'Viktor', 'Igor', 'Valentin', 'Fyodor', 'Anton', 'Pavel', 'Yevgeny', 'Arkady', 'Georgy', 'Vasily', 'Konstantin', 'Oleg', 'Aleksandr', 'Gennady', 'Yaroslav', 'Vadim', 'Valery', 'Grigori', 'Vasili', 'Maksim', 'Aleksander', 'Semyon', 'Pyotr', 'Vitali', 'Roman', 'Kirill', 'Lev', 'Anatoly', 'Stepan', 'Ruslan', 'Vladislav', 'Nikita', 'Sergey', 'Ilya', 'Mark', 'Vlad', 'Aleksei', 'Artem', 'Vyacheslav', 'Makar', 'Miroslav', 'Sviatoslav', 'Yakov', 'Rurik', 'Anatol', 'Nestor', 'Bogdan', 'Radomir', 'Bogdan', 'Iosif', 'Yan', 'Efim', 'Lavrenti', 'Matvei', 'Sava', 'Timofei', 'Foma', 'Ipati', 'Feodor', 'Vasiliy', 'Gerasim', 'Leonti', 'Kliment', 'Ignati', 'Afanasi', 'Aleksey', 'Feofan', 'Rodion', 'Marat', 'Gavriil', 'Terenti', 'Savva', 'Serafim', 'Zinovi', 'Prokhor', 'Venedikt', 'German', 'Vsevolod', 'Innokenti', 'Luka', 'Vitaly', 'Demyan', 'Ermolai', 'Rostislav', 'Filipp', 'Tikhon', 'Mstislav', 'Alek', 'Svyatoslav', 'Veniamin', 'Isaak', 'Agafon', 'Grigory', 'Platon'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Soviet/Male'\n        },\n        \"Female\": {\n            firstNames: ['Anastasia', 'Ekaterina', 'Maria', 'Anna', 'Elena', 'Olga', 'Irina', 'Svetlana', 'Natalia', 'Ludmila', 'Galina', 'Tatiana', 'Yulia', 'Valentina', 'Daria', 'Sofia', 'Alina', 'Vera', 'Marina', 'Polina', 'Elizaveta', 'Alexandra', 'Larisa', 'Inna', 'Ksenia', 'Victoria', 'Nadezhda', 'Lyudmila', 'Violetta', 'Yana', 'Alla', 'Valeria', 'Karina', 'Oksana', 'Evgenia', 'Lilia', 'Alyona', 'Margarita', 'Kristina', 'Svetlana', 'Taisiya', 'Zinaida', 'Raisa', 'Yelena', 'Zoya', 'Nina', 'Rimma', 'Lyubov', 'Antonina', 'Izabella', 'Anzhelika', 'Serafima', 'Ekaterina', 'Evgeniya', 'Nataliya', 'Kira', 'Veronika', 'Ivanna', 'Diana', 'Angelina', 'Roxana', 'Nelli', 'Elvira', 'Yaroslava', 'Olesya', 'Mila', 'Liana', 'Alisa', 'Anfisa', 'Miroslava', 'Klara', 'Yuliana', 'Anita', 'Aglaya', 'Alevtina', 'Anaida', 'Anait', 'Anastasiya', 'Anelia', 'Angela', 'Anisa', 'Anka', 'Antonia', 'Ariadna', 'Arina', 'Asya', 'Augusta', 'Aurelia', 'Avdotya', 'Aventina', 'Aza', 'Aziza', 'Barbara', 'Bella', 'Bogdana', 'Boleslava', 'Borislava', 'Bronislava', 'Vasilisa', 'Vladislava', 'Yadviga', 'Yanina', 'Yarina', 'Yevdokiya', 'Zemfira', 'Zlata', 'Zoika', 'Zoya'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Soviet/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Ivanov', 'Petrov', 'Sidorov', 'Kuznetsov', 'Popov', 'Vasiliev', 'Smirnov', 'Kozlov', 'Novikov', 'Morozov', 'Volkov', 'Solovyov', 'Voronov', 'Ermakov', 'Nikitin', 'Sokolov', 'Mikhailov', 'Fedorov', 'Dmitriev', 'Alexeev', 'Semenov', 'Lebedev', 'Egorov', 'Pavlov', 'Konovalov', 'Stepanov', 'Komarov', 'Kiselev', 'Makarov', 'Andreev', 'Osipov', 'Frolov', 'Gerasimov', 'Titov', 'Mironov', 'Vinogradov', 'Kudryavtsev', 'Golubev', 'Ignatiev', 'Kalinin', 'Timofeev', 'Orlov', 'Fomin', 'Uvarov', 'Filippov', 'Spassky', 'Evdokimov', 'Marinin', 'Kulikov', 'Klimov', 'Shestakov', 'Agafonov', 'Anisimov', 'Aksyonov', 'Grigoriev', 'Ponomarev', 'Gusev', 'Sharov', 'Kudryashov', 'Bogdanov', 'Martyanov', 'Borisov', 'Svetlov', 'Tikhonov', 'Kharitonov', 'Simakov', 'Pankratov', 'Nazarov', 'Petrovsky', 'Antonov', 'Blinov', 'Sukhanov', 'Kupriyanov', 'Melnikov', 'Sobolev', 'Kholodov', 'Markov', 'Belousov', 'Yermolov', 'Zaitsev', 'Korolev', 'Samoylov', 'Efremov', 'Ignatov', 'Lykov', 'Molchanov', 'Vishnevsky', 'Jdanov', 'Baranov', 'Komissarov', 'Ovchinnikov', 'Trifonov', 'Savin', 'Lavrentiev', 'Dyachkov', 'Gavrilov', 'Kapustin', 'Andreev', 'Artamonov', 'Yakovlev', 'Mamedov', 'Sizov', 'Goryachev', 'Turov', 'Putyatin'],\n\t}\n    },\n    \"US\": {\n        \"Male\": {\n            firstNames: [ 'James', 'John', 'Robert', 'Michael', 'William', 'David', 'Richard', 'Joseph', 'Thomas', 'Charles', 'Christopher', 'Daniel', 'Matthew', 'Anthony', 'Donald', 'Mark', 'Paul', 'Steven', 'Andrew', 'Kenneth', 'George', 'Joshua', 'Kevin', 'Brian', 'Edward', 'Ronald', 'Timothy', 'Jason', 'Jeffrey', 'Ryan', 'Jacob', 'Gary', 'Nicholas', 'Eric', 'Stephen', 'Jonathan', 'Larry', 'Justin', 'Scott', 'Brandon', 'Benjamin', 'Samuel', 'Frank', 'Gregory', 'Raymond', 'Alexander', 'Patrick', 'Jack', 'Dennis', 'Jerry', 'Tyler', 'Aaron', 'Jose', 'Henry', 'Douglas', 'Adam', 'Peter', 'Nathan', 'Zachary', 'Walter', 'Kyle', 'Harold', 'Carl', 'Jeremy', 'Keith', 'Roger', 'Gerald', 'Ethan', 'Arthur', 'Terry', 'Christian', 'Sean', 'Lawrence', 'Austin', 'Joe','Noah', 'Jesse', 'Albert', 'Bryan', 'Billy', 'Bruce', 'Willie', 'Jordan', 'Dylan', 'Alan', 'Ralph', 'Gabriel', 'Roy', 'Juan', 'Wayne', 'Eugene', 'Logan', 'Randy', 'Louis', 'Russell', 'Vincent', 'Philip', 'Bobby', 'Johnny', 'Bradley'],\n            imgDirectory: 'modules/npc-generator-t2k/images/US/Male'\n        },\n        \"Female\": {\n            firstNames: ['Mary', 'Jennifer', 'Linda', 'Patricia', 'Elizabeth', 'Susan', 'Jessica', 'Sarah', 'Karen', 'Nancy', 'Margaret', 'Lisa', 'Betty', 'Dorothy', 'Sandra', 'Ashley', 'Kimberly', 'Donna', 'Emily', 'Michelle', 'Carol', 'Amanda', 'Melissa', 'Deborah', 'Stephanie', 'Rebecca', 'Laura', 'Helen', 'Sharon', 'Cynthia', 'Kathleen', 'Amy', 'Shirley', 'Angela', 'Anna', 'Ruth', 'Brenda', 'Pamela', 'Nicole', 'Katherine', 'Samantha', 'Christine', 'Emma', 'Catherine', 'Debra', 'Rachel', 'Carolyn', 'Janet', 'Virginia', 'Maria', 'Heather', 'Diane', 'Julie', 'Joyce', 'Victoria', 'Olivia', 'Kelly', 'Christina', 'Lauren', 'Joan', 'Evelyn', 'Judith', 'Megan', 'Cheryl', 'Andrea', 'Hannah', 'Martha', 'Jacqueline', 'Frances', 'Gloria', 'Ann', 'Teresa', 'Kathryn', 'Sara', 'Janice', 'Jean', 'Alice', 'Madison', 'Doris', 'Abigail', 'Julia', 'Judy', 'Grace', 'Denise', 'Amber', 'Marilyn', 'Beverly', 'Danielle', 'Theresa', 'Sophia', 'Marie', 'Diana', 'Brittany', 'Natalie', 'Isabella', 'Charlotte', 'Rose', 'Alexis', 'Kayla'],\n            imgDirectory: 'modules/npc-generator-t2k/images/US/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Garcia', 'Miller', 'Davis', 'Rodriguez', 'Martinez', 'Hernandez', 'Lopez', 'Gonzalez', 'Wilson', 'Anderson', 'Thomas', 'Taylor', 'Moore', 'Jackson', 'Martin', 'Lee', 'Perez', 'Thompson', 'White', 'Harris', 'Sanchez', 'Clark', 'Ramirez', 'Lewis', 'Robinson', 'Walker', 'Young', 'Allen', 'King', 'Wright', 'Scott', 'Torres', 'Nguyen', 'Hill', 'Flores', 'Green', 'Adams', 'Nelson', 'Baker', 'Hall', 'Rivera', 'Campbell', 'Mitchell', 'Carter', 'Roberts', 'Gomez', 'Phillips', 'Evans', 'Turner', 'Diaz', 'Parker', 'Cruz', 'Edwards', 'Collins', 'Reyes', 'Stewart', 'Morris', 'Morales', 'Murphy', 'Cook', 'Rogers', 'Gutierrez', 'Ortiz', 'Morgan', 'Cooper', 'Peterson', 'Bailey', 'Reed', 'Kelly', 'Howard', 'Ramos', 'Kim', 'Cox', 'Ward', 'Richardson', 'Watson', 'Brooks', 'Chavez', 'Wood', 'James', 'Bennett', 'Gray', 'Mendoza', 'Ruiz', 'Hughes', 'Price', 'Alvarez', 'Castillo', 'Sanders', 'Patel', 'Myers', 'Long', 'Ross', 'Foster', 'Jimenez', 'Powell'],\n\t}\n    },\n    \"Poland\": {\n        \"Male\": {\n            firstNames: ['Adam', 'Adrian', 'Albert', 'Aleksander', 'Alfred', 'Andrzej', 'Antoni', 'Arkadiusz', 'Artur', 'Bartek', 'Bartłomiej', 'Benedykt', 'Benjamin', 'Bernard', 'Błażej', 'Bogdan', 'Bolesław', 'Bronisław', 'Cezary', 'Cyprian', 'Cyryl', 'Dalegor', 'Damian', 'Daniel', 'Dariusz', 'Dawid', 'Dominik', 'Dorian', 'Edward', 'Emil', 'Eryk', 'Fabian', 'Feliks', 'Ferdynand', 'Filip', 'Franciszek', 'Gabriel', 'Grzegorz', 'Henryk', 'Hubert', 'Ignacy', 'Igor', 'Iwo', 'Jacek', 'Jakub', 'Jan', 'Janusz', 'Jarosław', 'Jerzy', 'Joachim', 'Józef', 'Julian', 'Kacper', 'Kajetan', 'Karol', 'Kazimierz', 'Konrad', 'Krzysztof', 'Ksawery', 'Lech', 'Leon', 'Leonard', 'Leopold', 'Leszek', 'Ludwik', 'Łukasz', 'Maciej', 'Maksymilian', 'Marcin', 'Marek', 'Mariusz', 'Mateusz', 'Michał', 'Mieczysław', 'Mikołaj', 'Miłosz', 'Nikodem', 'Norbert', 'Olaf', 'Olgierd', 'Oscar', 'Patryk', 'Paweł', 'Piotr', 'Przemysław', 'Rafał', 'Robert', 'Ryszard', 'Sebastian', 'Sławomir', 'Stanisław', 'Stefan', 'Szymon', 'Tadeusz', 'Tomasz', 'Tymon', 'Tymoteusz', 'Wiktor', 'Witold', 'Władysław', 'Włodzimierz', 'Wojciech', 'Zbigniew', 'Zdzisław', 'Zenon', 'Zygmunt'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Poland/Male'\n        },\n        \"Female\": {\n            firstNames: ['Anna', 'Maria', 'Katarzyna', 'Małgorzata', 'Agnieszka', 'Barbara', 'Ewa', 'Krystyna', 'Elżbieta', 'Zofia', 'Janina', 'Teresa', 'Danuta', 'Halina', 'Irena', 'Magdalena', 'Joanna', 'Jadwiga', 'Stanisława', 'Bożena', 'Aleksandra', 'Monika', 'Grażyna', 'Stefania', 'Marta', 'Dorota', 'Marzena', 'Beata', 'Natalia', 'Wanda', 'Krzysztofa', 'Justyna', 'Karolina', 'Czesława', 'Kamila', 'Lucyna', 'Jolanta', 'Edyta', 'Alicja', 'Aneta', 'Paulina', 'Sylwia', 'Bożenna', 'Patrycja', 'Bogumiła', 'Eugenia', 'Iwona', 'Marlena', 'Weronika', 'Julianna', 'Emilia', 'Renata', 'Adrianna', 'Kornelia', 'Aldona', 'Milena', 'Elwira', 'Aurelia', 'Gabriela', 'Helena', 'Roksana', 'Angelika', 'Leokadia', 'Wiktoria', 'Zuzanna', 'Romana', 'Kalina', 'Leonia', 'Daria', 'Bogusława', 'Olga', 'Blanka', 'Julia', 'Nadia', 'Melania', 'Eryka', 'Lidia', 'Magda', 'Zdzisława', 'Maja', 'Brygida', 'Liliana', 'Anastazja', 'Rozalia', 'Dagmara', 'Marianna', 'Wiesława', 'Mirela', 'Felicia', 'Klaudia', 'Honorata', 'Ilona', 'Karina', 'Apolonia', 'Dominika', 'Iga', 'Pelagia', 'Tamara', 'Mirosława', 'Sandra', 'Ludwika', 'Cecylia', 'Polina', 'Klara', 'Laura', 'Roza', 'Amanda'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Poland/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Nowak', 'Kowalski', 'Wiśniewski', 'Dąbrowski', 'Lewandowski', 'Wójcik', 'Kamiński', 'Kowalczyk', 'Zieliński', 'Szymański', 'Woźniak', 'Kozłowski', 'Jankowski', 'Wojciechowski', 'Kwiatkowski', 'Kaczmarek', 'Mazur', 'Krawczyk', 'Piotrowski', 'Grabowski', 'Nowakowski', 'Pawłowski', 'Michalski', 'Nowicki', 'Adamczyk', 'Dudek', 'Zając', 'Wieczorek', 'Jabłoński', 'Król', 'Majewski', 'Olszewski', 'Jaworski', 'Wróbel', 'Malinowski', 'Pawlak', 'Witkowski', 'Walczak', 'Stępień', 'Górski', 'Rutkowski', 'Michalak', 'Sikora', 'Ostrowski', 'Baran', 'Duda', 'Szewczyk', 'Tomaszewski', 'Pietrzak', 'Marciniak', 'Wróblewski', 'Zalewski', 'Jakubowski', 'Jasiński', 'Zawadzki', 'Sadowski', 'Bąk', 'Chmielewski', 'Włodarczyk', 'Borkowski', 'Czarnecki', 'Sawicki', 'Sokołowski', 'Urbański', 'Kubiak', 'Maciejewski', 'Szczepański', 'Kucharski', 'Wilk', 'Kalinowski', 'Lis', 'Mazurek', 'Wysocki', 'Adamski', 'Kaźmierczak', 'Wasilewski', 'Sobczak', 'Czerwiński', 'Andrzejewski', 'Cieślak', 'Głowacki', 'Zakrzewski', 'Kołodziej', 'Sikorski', 'Krajewski', 'Gajewski', 'Szymczak', 'Szulc', 'Baranowski', 'Laskowski', 'Brzeziński', 'Makowski', 'Ziółkowski', 'Przybylski', 'Domański', 'Nowacki', 'Borowski', 'Błaszczyk', 'Chojnacki', 'Ciesielski', 'Mróz', 'Szczepaniak', 'Wesołowski', 'Krupa', 'Kaczmarczyk', 'Leszczyński', 'Lipiński', 'Kowalewski'],\n\t}\n    },\n    \"Sweden\": {\n        \"Male\": {\n            firstNames: ['Erik', 'Lars', 'Karl', 'Anders', 'Johan', 'Per', 'Nils', 'Olof', 'Hans', 'Arne', 'Jörgen', 'Björn', 'Thomas', 'Jan', 'Gunnar', 'Göran', 'Marcus', 'Fredrik', 'Mattias', 'Daniel', 'Magnus', 'Mikael', 'Peter', 'Håkan', 'Christer', 'Lennart', 'Stefan', 'Henrik', 'David', 'Kjell', 'Bo', 'Jonas', 'Roland', 'Oskar', 'Leif', 'Tomas', 'Patrik', 'Rolf', 'Kent', 'Sven', 'Martin', 'Ulf', 'Joakim', 'John', 'Ingvar', 'Robert', 'Bertil', 'Rickard', 'Gustav', 'Alexander', 'Benny', 'Ronnie', 'Roger', 'Tommy', 'Harry', 'Tony', 'Conny', 'Frank', 'Jimmy', 'Rune', 'Chrille', 'Billy', 'Morgan', 'Lasse', 'Pelle', 'Bosse', 'Niklas', 'Olle', 'Börje', 'Torbjörn', 'Viktor', 'Åke', 'Hasse', 'Sebastian', 'Robin', 'Jesper', 'Dennis', 'Tobias', 'Simon', 'Anton', 'Niclas', 'Christoffer', 'Urban', 'Stig', 'Pär', 'Uno', 'Åsa', 'Mats', 'Tim', 'Jonathan', 'Bengt', 'Ludvig', 'Eddie', 'Max', 'Emil', 'Linus', 'Ville', 'Samuel', 'Adam', 'Jakob', 'Hampus', 'Gabriel', 'Filip'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Sweden/Male'\n        },\n        \"Female\": {\n            firstNames: ['Maria', 'Anna', 'Margareta', 'Elisabeth', 'Eva', 'Birgitta', 'Kristina', 'Karin', 'Elisabet', 'Marie', 'Ingrid', 'Christina', 'Lena', 'Helena', 'Inger', 'Johanna', 'Sofia', 'Kerstin', 'Marianne', 'Linda', 'Emma', 'Cecilia', 'Katarina', 'Sara', 'Malin', 'Ingegerd', 'Anita', 'Ann', 'Susanne', 'Ulla', 'Mariana', 'Elin', 'Monica', 'Carina', 'Linnéa', 'Camilla', 'Ulrika', 'Siv', 'Emelie', 'Åsa', 'Elsa', 'Annette', 'Hanna', 'Annika', 'Britt', 'Madeleine', 'Viola', 'Ellinor', 'Maj', 'Louise', 'Alice', 'Julia', 'Ebba', 'Agneta', 'Viktoria', 'Isabella', 'Liselotte', 'Gudrun', 'Linnea', 'Therese', 'Charlotta', 'Rut', 'Sonja', 'Magdalena', 'Amanda', 'Carolina', 'Gunilla', 'Nina', 'Astrid', 'Frida', 'Martina', 'Birgit', 'Erika', 'Ida', 'Josefine', 'Yvonne', 'Maud', 'Sigrid', 'Paula', 'Linn', 'Jenny', 'Stina', 'Vera', 'Tove', 'Hedvig', 'Beatrice', 'Klara', 'Anneli', 'Ingela', 'Mia', 'Rebecca', 'Inga', 'Irma', 'Ester', 'Catarina', 'Liselott', 'Solveig', 'Barbro', 'Sylvia', 'Amanda', 'Veronica', 'Caroline', 'Agnes', 'Alexandra'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Sweden/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Andersson', 'Johansson', 'Karlsson', 'Nilsson', 'Eriksson', 'Larsson', 'Olsson', 'Persson', 'Svensson', 'Gustafsson', 'Pettersson', 'Jonsson', 'Jansson', 'Hansson', 'Bengtsson', 'Jönsson', 'Lindberg', 'Jakobsson', 'Magnusson', 'Olofsson', 'Lindström', 'Lindqvist', 'Bergström', 'Lundberg', 'Mattsson', 'Berglund', 'Fredriksson', 'Sandberg', 'Henriksson', 'Forsberg', 'Sjöberg', 'Wallin', 'Engström', 'Axelsson', 'Danielsson', 'Ström', 'Björk', 'Holm', 'Berg', 'Arvidsson', 'Isaksson', 'Fransson', 'Holmberg', 'Lundqvist', 'Månsson', 'Pålsson', 'Löfgren', 'Björklund', 'Hermansson', 'Lundin', 'Sundberg', 'Wikström', 'Samuelsson', 'Bergman', 'Frisk', 'Nyström', 'Gunnarsson', 'Björnsson', 'Eklund', 'Nordström', 'Dahlberg', 'Nyberg', 'Blomqvist', 'Lööf', 'Söderberg', 'Lundström', 'Johnsson', 'Lindgren', 'Eliasson', 'Pihl', 'Hellström', 'Sundström', 'Hedlund', 'Gustavsson', 'Bäckström', 'Lund', 'Söderström', 'Börjesson', 'Falk', 'Gustafson', 'Fält', 'Edlund', 'Malm', 'Svenson', 'Nyman', 'Blom', 'Oskarsson', 'Lind', 'Granberg', 'Bergqvist', 'Lundgren', 'Berggren', 'Bäck', 'Sandström', 'Norberg', 'Andreasson', 'Håkansson', 'Fall', 'Forslund', 'Viklund', 'Lindholm', 'Sundqvist', 'Hellberg'],\n\t}\n    }\n};\n\n// Create a dialog for the user to select a faction, gender, and the number of tokens to create\nlet d = new Dialog({\n    title: 'Generate an NPC',\n    content: `\n        <form>\n            <div class=\"form-group\">\n                <label for=\"faction\">Faction:</label>\n                <select id=\"faction\" name=\"faction\">\n                    <option value=\"Soviet\" selected>Soviet</option>\n                    <option value=\"US\">US</option>\n                    <option value=\"Sweden\">Sweden</option>\n                    <option value=\"Poland\">Poland</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"gender\">Gender:</label>\n                <select id=\"gender\" name=\"gender\">\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Alternate\" selected>Alternate</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"level\">Power Level:</label>\n                <select id=\"level\" name=\"level\">\n                    <option value=\"0\">Low</option>\n                    <option value=\"1\">Medium</option>\n                    <option value=\"2\">High</option>\n                    <option value=\"Random\" selected>Random</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"gear\">Gear:</label>\n                <select id=\"gear\" name=\"gear\">\n                    <option value=\"Typical\">Typical</option>\n                    <option value=\"Full suit\">Full suit</option>\n                    <option value=\"Random\" selected>Random</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"number\">Amount:</label>\n                <input id=\"number\" name=\"number\" type=\"number\" min=\"1\" value=\"1\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"pingToken\">Ping:</label>\n                <input type=\"checkbox\" id=\"pingToken\" checked name=\"pingToken\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"panView\">Pan View:</label>\n                <input type=\"checkbox\" id=\"panView\" checked name=\"panView\">\n            </div>\n        </form>\n    `,\n    buttons: {\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: 'Cancel'\n        },\n        ok: {\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: 'Generate',\n            callback: async (html) => {\n                let factionName = html.find('[name=\"faction\"]').val();\n                let gender = html.find('[name=\"gender\"]').val();\n                let randomItems = html.find('[name=\"gear\"]').val();\n                let number = html.find('[name=\"number\"]').val();\n                let level = html.find('[name=\"level\"]').val();\n                let pingToken = html.find('[name=\"pingToken\"]');\n                let panView = html.find('[name=\"panView\"]');\n\n                // If \"Alternate\" is selected, alternate between \"Male\" and \"Female\"\n                if (gender === \"Alternate\") {\n                    for (let i = 0; i < number; i++) {\n                        let genderToggle = i % 2 === 0 ? \"Male\" : \"Female\";\n                        let faction = factions[factionName][genderToggle];\n\t\t\t                  let factionboth = factions[factionName][\"Both\"];\n                        await createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView, level);\n                    }\n                } else {\n                    let faction = factions[factionName][gender];\n\t  \t              let factionboth = factions[factionName][\"Both\"];\n                    for (let i = 0; i < number; i++) {\n                        await createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView, level);\n                    }\n                }\n            }\n        }\n\n    },\n    default: 'ok'\n});\n\nd.render(true);\n\nasync function createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView, level) {\n\n    let tempLevel = 0;\n    if (level === 'Random') {\n      tempLevel = Math.floor(Math.random() * 3);\n    } else {\n      tempLevel = Number(level);\n    }\n\n    function getRandomElements(array, numElements, factionName) {\n      let result = [];\n      let tempArray = [...array];\n      ranElements = Math.floor(Math.random() * (numElements));\n      if ((factionName=== 'US') || (factionName=== 'Soviet')) {\n        ranElements = 1;\n      } else {\n        ranElements = Math.floor(Math.random() * (numElements + 1));\n      }\n      for (let i = 0; i < ranElements; i++) {\n        if(tempArray.length === 0) break;\n        let index = Math.floor(Math.random() * tempArray.length);\n        result.push(tempArray[index]);\n        tempArray.splice(index, 1);\n      }\n      return result;\n    }\n\n    function skewedRandomAge(min, max, mean, stdDev) {\n      let skewNormal = () => {\n        let u, v, num;\n        do {\n          u = Math.random() * 2 - 1;\n          v = Math.random() * 2 - 1;\n          num = u * u + v * v;\n        } while (num >= 1 || num === 0);\n        num = u * Math.sqrt((-2.0 * Math.log(num)) / num);\n        num = mean + stdDev * num; // Translate and scale\n        num = Math.floor(num); // Convert to integer\n        return Math.max(min, Math.min(num, max)); // Constrain between min and max\n      };\n\n      return skewNormal();\n    }\n\n    // Function to distribute points over an array of skills or attributes\n    function distributePoints(skillsOrAttributes, factionName, minPoints, maxPoints, minValue = 0, maxValue = 4, tempLevel = 3) {\n      const skillScores = ['–', 'D', 'C', 'B', 'A'];\n\n      // First assign the minimum value to all\n      let values = Object.fromEntries(skillsOrAttributes.map(skillOrAttribute => [skillOrAttribute, skillScores[minValue]]));\n\n      let pointsToDistribute = Math.floor(Math.random() * (maxPoints - minPoints + 1) + minPoints);\n      let currentValue = 0;\n\n      // Distribute remaining points randomly\n      while(pointsToDistribute > 0) {\n          let randomSkillOrAttribute = skillsOrAttributes[Math.floor(Math.random() * skillsOrAttributes.length)];\n          currentValue = skillScores.indexOf(values[randomSkillOrAttribute]);\n\n          // Only add point if we haven't reached the maximum value\n          if (currentValue < maxValue) {\n              values[randomSkillOrAttribute] = skillScores[currentValue + 1];\n              pointsToDistribute--;\n          }\n        //  pointsToDistribute--;\n      }\n    //  if (factionName === 'Soviet' || factionName === 'US') {\n      //    if (Math.random() < 0.9 && values['rangedCombat'] !== 'A') {\n            //  currentValue = skillScores.indexOf(values['rangedCombat']);\n            //  values['rangedCombat'] = skillScores[currentValue + 1];\n          //  values['rangedCombat']=skillScores[skillScores.indexOf(values['rangedCombat']) + 1];\n      //    }\n       //}\n       //if (tempLevel == 2) {\n        // skillsOrAttributes['rangedCombat'] = 'A';\n       //}\n\n\n      // Transform die score into skill score.\n      for(let key in values) {\n          if (key=='rangedCombat') {\n            if (tempLevel == 2 && values[key] !== 'A'){\n              values[key]=skillScores[skillScores.indexOf(values[key]) + 1];\n            }\n            if ((factionName === 'Soviet' || factionName === 'US') && (Math.random() < 0.9) &&(values[key] !== 'A')) {\n              values[key]=skillScores[skillScores.indexOf(values[key]) + 1];\n            }\n          }\n          if(values[key] === '–') {\n              delete values[key]; // remove skills with score '–'\n          } else {\n              values[key] = { score: values[key] };\n          }\n      }\n      return values;\n    }\n\n\n    let firstName = faction.firstNames[Math.floor(Math.random() * faction.firstNames.length)];\n    let lastName = factionboth.lastNames[Math.floor(Math.random() * factionboth.lastNames.length)];\n\n    let images = await FilePicker.browse(\"data\", faction.imgDirectory);\n    let img = images.files[Math.floor(Math.random() * images.files.length)];\n\n    // Define attributes and skills\n    let attributes = distributePoints(['str', 'agl', 'int', 'emp'], factionName, ((tempLevel*3)), (2+(tempLevel*4)), 1, 4, tempLevel); // Attributes start at 'D'\n    let skillsAmount = 9+(tempLevel*5);\n    let skills = distributePoints(['heavyWeapons', 'closeCombat', 'stamina', 'driving', 'mobility', 'rangedCombat', 'recon', 'survival', 'tech', 'command', 'persuasion', 'medicalAid'], factionName, 4, skillsAmount, 0, 4, tempLevel);\n    let cufScore = 0\n    if (tempLevel == 0) {\n      cufScore = ['D', 'C', 'B', 'A'][Math.floor(Math.random() * 3)];\n    } else if (tempLevel == 1) {\n      cufScore = ['D', 'C', 'B', 'A'][Math.floor(Math.random() * 4)];\n    } else {\n      cufScore = ['D', 'C', 'B', 'A'][Math.floor(Math.random() * 3)+1];\n    }\n\n    let age = skewedRandomAge(16, 70, 25, 10);\n\n    let actorData = {\n        name: `${firstName} ${lastName}`,\n        type: \"npc\",\n        img: img,\n        token: {\n            img: img\n        },\n        system: {\n           attributes: attributes,\n           skills: skills,\n           bio: {\n             nationality: factionName,\n             militaryRank: \"\",\n             age: age\n          },\n          cuf: {\n            score: cufScore\n          },\n        },\n        folder: npcFolder.id, // Assign the actor to the \"NPC\" folder\n    };\n\n    let createdActor = await Actor.create(actorData);\n\n\n    // Fetch the item data for the items we want to assign\n    let itemNames = ['Rifle Butt', 'Knife', 'Unarmed'];\n    let armorItems = [];\n    let factionWeapons = [];\n    let randomWeapons = [];\n    let factionItems = [];\n    let helmetItems = [];\n    let randomHelmet = [];\n    let randomArmor = [];\n\n    if (factionName=== 'Soviet') {\n      factionWeapons = ['AKM', 'AK-74', 'PM Makarov', 'PSM', 'SVD-63 Dragunov', 'PKM'];\n      factionWeightedWeapons = ['AK-74', 'AKM'];\n      typicalSoldierItems = ['AK-74', 'Steel Helmet', 'Fatigues', '5.45x39mm, 30-round Mag'];\n      factionItems = ['Frag Grenade', '7.62x39mm, 30-round Mag', 'Anti Tank Grenade', 'Field Ration', 'Field Ration', 'Clean Water', 'RPG-7V', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Tools, Basic', 'Protective Mask', 'Radiacmeter', 'Chemical Agent Detector', 'Atropine Autoinjector', 'Wild Food', 'Improvised Explosives, 1 Unit', 'Fatigues', 'Smoke Grenade'];\n      armorItems = ['Flak Jacket', 'Plate Vest'];\n      helmetItems = ['Steel Helmet', 'Soviet SSH-68'];\n    } else if (factionName=== 'US') {\n      factionWeapons = ['M16A1', 'M16A2', 'M40A3', 'M4', 'M4A1', 'M1911A1', 'M60', 'M240B'];\n      factionWeightedWeapons = ['M16A1', 'M16A2', 'M4', 'M4A1'];\n      typicalSoldierItems = ['M16A1', 'Kevlar Helmet', 'Fatigues', '5.56x45mm, 30-round Mag'];\n      factionItems = ['Frag Grenade', '5.56x45mm, 30-round Mag', 'Anti Tank Grenade', 'Field Ration','Field Ration', 'Clean Water', 'M72A3 LAW', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Tools, Basic', 'Protective Mask', 'Radiacmeter', 'Chemical Agent Detector', 'Atropine Autoinjector', 'Wild Food', 'Plastic Explosives, 1 Unit', 'M18 Claymore Directional Mine', 'Fatigues', , 'Smoke Grenade'];\n      armorItems = ['Flak Jacket', 'Plate Vest'];\n      helmetItems = ['Kevlar Helmet', 'US PASGT'];\n    } else if (factionName=== 'Sweden') {\n      factionWeapons = ['Rock','Ak 4', 'Ak 5', 'Ag 90','Bolt-action Rifle', 'Double-barrelled Shotgun', 'Double-barrelled Shotgun, sawed-off', 'Police Pistol', 'Service Revolver', 'Pipe Gun (rifle)','Pipe Gun (shotgun)', 'Crossbow', 'Hunting Bow', 'Improvised Bow', 'Axe', 'Spiked Bat', 'Club', 'Lever-action Rifle', 'KSP 90', 'KSP 88', 'Kpist m/45', 'Combat Pistol', 'Zip Gun'];\n      typicalSoldierItems = ['Ak 5', 'Swedish Hjälm 90', 'Fatigues', '5.56x45mm, 30-round Mag'];\n      factionItems = ['Swedish Hjälm 90', '5.56x45mm, 30-round Mag','Pskott m/86', 'Pist 88', 'Frag Grenade', 'Anti Tank Grenade', 'Field Ration', 'Domestic Food', 'Clean Water', 'Domestic Food', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Lockpicks', 'Tools, Basic', 'Fishing Gear', 'Protective Mask',  'Wild Food', 'Dynamite Stick', 'Improvised Explosives, 1 Unit', 'Molotov Cocktail', 'Improvised Grenade'];\n      helmetItems = [];\n      armorItems = [];\n    } else {\n      factionWeapons = ['Rock','AKM (Polish)','P-83','PKM (Polish)','PM-84','PMK-60','RPK (Polish)','SWD','Bolt-action Rifle', 'Double-barrelled Shotgun', 'Double-barrelled Shotgun, sawed-off', 'Police Pistol', 'Service Revolver', 'Pipe Gun (rifle)','Pipe Gun (shotgun)', 'Crossbow', 'Hunting Bow', 'Improvised Bow', 'Axe', 'Spiked Bat', 'Club', 'Lever-action Rifle', 'Combat Pistol', 'Zip Gun'];\n      typicalSoldierItems = ['AKM', 'Polish WZ75', 'Fatigues', '7.62x39mm, 30-round Mag'];\n      factionItems = ['Polish WZ75', '7.62x39mm, 30-round Mag', 'RPG-7V (Polish)','Frag Greanade', 'Anti Tank Grenade', 'Field Ration', 'Domestic Food', 'Clean Water', 'Domestic Food', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Lockpicks', 'Tools, Basic', 'Protective Mask', 'Fishing Gear', 'Wild Food', 'Dynamite Stick', 'Improvised Explosives, 1 Unit', 'Fatigues', 'Molotov Cocktail', 'Improvised Grenade'];\n      helmetItems = [];\n      armorItems = [];\n    }\n\n    if (randomItems === 'Random') {\n      let randomItems = getRandomElements(factionItems, 4+(tempLevel*2));\n      if ((factionName=== 'US') || (factionName=== 'Soviet')) {\n        if (Math.random() < 0.3) {\n          randomWeapons = typicalSoldierItems;\n          randomHelmet = [];\n        } else {\n          randomWeapons = getRandomElements(factionWeightedWeapons, 1, factionName);\n          randomHelmet = getRandomElements(helmetItems, 1);\n        }\n      } else {\n        if (tempLevel == 2) {\n          randomWeapons = getRandomElements(factionWeapons, 1, 'US');\n        } else {\n          randomWeapons = getRandomElements(factionWeapons, 1, factionName);\n        }\n        randomHelmet = getRandomElements(helmetItems, 1);\n      }\n      if (tempLevel == 2) {\n        armorItems = ['Flak Jacket', 'Plate Vest'];\n        randomArmor = getRandomElements(armorItems, 1);\n      } else {\n        if (Math.random() < 0.3) {\n          randomArmor = getRandomElements(armorItems, 1);\n        } else {\n          randomArmor = [];\n        }\n      }\n      itemNames = [...itemNames, ...randomArmor, ...randomHelmet, ...randomItems, ...randomWeapons];\n    } else if (randomItems === 'Typical') {\n      itemNames = [...itemNames, ...typicalSoldierItems];\n    } else {\n      itemNames = [...itemNames, ...armorItems, ...helmetItems, ...factionItems, ...factionWeapons];\n    }\n\n    let items = [];\n    for (let itemName of itemNames) {\n      let item = game.items.getName(itemName);\n      if (item) {\n        items.push(item);\n      }\n    }\n\n    await createdActor.createEmbeddedDocuments(\"Item\", items);\n\n    if (canvas.scene) {\n      // Get the viewed rectangle\n      const viewRect = canvas.dimensions.rect;\n\n      // Calculate the center of the viewed rectangle in grid units\n      const x = viewRect.x + (viewRect.width / 2);\n      const y = viewRect.y + (viewRect.height / 2);\n\n      const tDoc = await createdActor.getTokenDocument({ x:x, y: y });\n      const createdTokens = await canvas.scene.createEmbeddedDocuments('Token', [tDoc]);\n\n      // get the token id\n      let tokenId = createdTokens[0]._id;\n\n      // get the Token instance from the current scene\n      let tokenInstance = canvas.scene.getEmbeddedDocument('Token', tokenId);\n\n      if (panView.is(':checked')) {\n        canvas.animatePan(tokenInstance);\n      }\n      if (pingToken.is(':checked')) {\n        canvas.ping(tokenInstance);\n      }\n\n    } else {\n        console.warn(\"No active scene available to place token.\");\n    }\n\n}","flags":{"core":{"sourceId":"Macro.uGtm1p5bWsZjlMIV"}},"_stats":{"systemId":"t2k4e","systemVersion":"10.2.0","coreVersion":"10.291","createdTime":1685961469660,"modifiedTime":1686076423356,"lastModifiedBy":"NbJ83QqO5LxARCdR"},"ownership":{"default":0,"NbJ83QqO5LxARCdR":3},"folder":null,"sort":0,"_id":"Ngqpf5Ht9ZkIhm1F"}
{"$$deleted":true,"_id":"Ngqpf5Ht9ZkIhm1F"}
{"name":"Generate an NPC","type":"script","scope":"global","author":"NbJ83QqO5LxARCdR","img":"icons/svg/aura.svg","command":"// Check if a folder named \"NPC\" exists\nlet npcFolder = game.folders.find(folder => folder.name === \"NPC\" && folder.type === \"Actor\");\n\n// If the folder doesn't exist, create it\nif (!npcFolder) {\n  npcFolder = await Folder.create({ name: \"NPC\", type: \"Actor\", parent: null });\n}\n\n\n// Define the first names, last names, and image directories for each faction and gender\nlet factions = {\n    \"Soviet\": {\n        \"Male\": {\n            firstNames: ['Ivan', 'Alexei', 'Dmitri', 'Sergei', 'Nikolai', 'Vladimir', 'Mikhail', 'Anatoli', 'Yuri', 'Andrei', 'Boris', 'Leonid', 'Evgeni', 'Viktor', 'Igor', 'Valentin', 'Fyodor', 'Anton', 'Pavel', 'Yevgeny', 'Arkady', 'Georgy', 'Vasily', 'Konstantin', 'Oleg', 'Aleksandr', 'Gennady', 'Yaroslav', 'Vadim', 'Valery', 'Grigori', 'Vasili', 'Maksim', 'Aleksander', 'Semyon', 'Pyotr', 'Vitali', 'Roman', 'Kirill', 'Lev', 'Anatoly', 'Stepan', 'Ruslan', 'Vladislav', 'Nikita', 'Sergey', 'Ilya', 'Mark', 'Vlad', 'Aleksei', 'Artem', 'Vyacheslav', 'Makar', 'Miroslav', 'Sviatoslav', 'Yakov', 'Rurik', 'Anatol', 'Nestor', 'Bogdan', 'Radomir', 'Bogdan', 'Iosif', 'Yan', 'Efim', 'Lavrenti', 'Matvei', 'Sava', 'Timofei', 'Foma', 'Ipati', 'Feodor', 'Vasiliy', 'Gerasim', 'Leonti', 'Kliment', 'Ignati', 'Afanasi', 'Aleksey', 'Feofan', 'Rodion', 'Marat', 'Gavriil', 'Terenti', 'Savva', 'Serafim', 'Zinovi', 'Prokhor', 'Venedikt', 'German', 'Vsevolod', 'Innokenti', 'Luka', 'Vitaly', 'Demyan', 'Ermolai', 'Rostislav', 'Filipp', 'Tikhon', 'Mstislav', 'Alek', 'Svyatoslav', 'Veniamin', 'Isaak', 'Agafon', 'Grigory', 'Platon'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Soviet/Male'\n        },\n        \"Female\": {\n            firstNames: ['Anastasia', 'Ekaterina', 'Maria', 'Anna', 'Elena', 'Olga', 'Irina', 'Svetlana', 'Natalia', 'Ludmila', 'Galina', 'Tatiana', 'Yulia', 'Valentina', 'Daria', 'Sofia', 'Alina', 'Vera', 'Marina', 'Polina', 'Elizaveta', 'Alexandra', 'Larisa', 'Inna', 'Ksenia', 'Victoria', 'Nadezhda', 'Lyudmila', 'Violetta', 'Yana', 'Alla', 'Valeria', 'Karina', 'Oksana', 'Evgenia', 'Lilia', 'Alyona', 'Margarita', 'Kristina', 'Svetlana', 'Taisiya', 'Zinaida', 'Raisa', 'Yelena', 'Zoya', 'Nina', 'Rimma', 'Lyubov', 'Antonina', 'Izabella', 'Anzhelika', 'Serafima', 'Ekaterina', 'Evgeniya', 'Nataliya', 'Kira', 'Veronika', 'Ivanna', 'Diana', 'Angelina', 'Roxana', 'Nelli', 'Elvira', 'Yaroslava', 'Olesya', 'Mila', 'Liana', 'Alisa', 'Anfisa', 'Miroslava', 'Klara', 'Yuliana', 'Anita', 'Aglaya', 'Alevtina', 'Anaida', 'Anait', 'Anastasiya', 'Anelia', 'Angela', 'Anisa', 'Anka', 'Antonia', 'Ariadna', 'Arina', 'Asya', 'Augusta', 'Aurelia', 'Avdotya', 'Aventina', 'Aza', 'Aziza', 'Barbara', 'Bella', 'Bogdana', 'Boleslava', 'Borislava', 'Bronislava', 'Vasilisa', 'Vladislava', 'Yadviga', 'Yanina', 'Yarina', 'Yevdokiya', 'Zemfira', 'Zlata', 'Zoika', 'Zoya'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Soviet/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Ivanov', 'Petrov', 'Sidorov', 'Kuznetsov', 'Popov', 'Vasiliev', 'Smirnov', 'Kozlov', 'Novikov', 'Morozov', 'Volkov', 'Solovyov', 'Voronov', 'Ermakov', 'Nikitin', 'Sokolov', 'Mikhailov', 'Fedorov', 'Dmitriev', 'Alexeev', 'Semenov', 'Lebedev', 'Egorov', 'Pavlov', 'Konovalov', 'Stepanov', 'Komarov', 'Kiselev', 'Makarov', 'Andreev', 'Osipov', 'Frolov', 'Gerasimov', 'Titov', 'Mironov', 'Vinogradov', 'Kudryavtsev', 'Golubev', 'Ignatiev', 'Kalinin', 'Timofeev', 'Orlov', 'Fomin', 'Uvarov', 'Filippov', 'Spassky', 'Evdokimov', 'Marinin', 'Kulikov', 'Klimov', 'Shestakov', 'Agafonov', 'Anisimov', 'Aksyonov', 'Grigoriev', 'Ponomarev', 'Gusev', 'Sharov', 'Kudryashov', 'Bogdanov', 'Martyanov', 'Borisov', 'Svetlov', 'Tikhonov', 'Kharitonov', 'Simakov', 'Pankratov', 'Nazarov', 'Petrovsky', 'Antonov', 'Blinov', 'Sukhanov', 'Kupriyanov', 'Melnikov', 'Sobolev', 'Kholodov', 'Markov', 'Belousov', 'Yermolov', 'Zaitsev', 'Korolev', 'Samoylov', 'Efremov', 'Ignatov', 'Lykov', 'Molchanov', 'Vishnevsky', 'Jdanov', 'Baranov', 'Komissarov', 'Ovchinnikov', 'Trifonov', 'Savin', 'Lavrentiev', 'Dyachkov', 'Gavrilov', 'Kapustin', 'Andreev', 'Artamonov', 'Yakovlev', 'Mamedov', 'Sizov', 'Goryachev', 'Turov', 'Putyatin'],\n\t}\n    },\n    \"US\": {\n        \"Male\": {\n            firstNames: [ 'James', 'John', 'Robert', 'Michael', 'William', 'David', 'Richard', 'Joseph', 'Thomas', 'Charles', 'Christopher', 'Daniel', 'Matthew', 'Anthony', 'Donald', 'Mark', 'Paul', 'Steven', 'Andrew', 'Kenneth', 'George', 'Joshua', 'Kevin', 'Brian', 'Edward', 'Ronald', 'Timothy', 'Jason', 'Jeffrey', 'Ryan', 'Jacob', 'Gary', 'Nicholas', 'Eric', 'Stephen', 'Jonathan', 'Larry', 'Justin', 'Scott', 'Brandon', 'Benjamin', 'Samuel', 'Frank', 'Gregory', 'Raymond', 'Alexander', 'Patrick', 'Jack', 'Dennis', 'Jerry', 'Tyler', 'Aaron', 'Jose', 'Henry', 'Douglas', 'Adam', 'Peter', 'Nathan', 'Zachary', 'Walter', 'Kyle', 'Harold', 'Carl', 'Jeremy', 'Keith', 'Roger', 'Gerald', 'Ethan', 'Arthur', 'Terry', 'Christian', 'Sean', 'Lawrence', 'Austin', 'Joe','Noah', 'Jesse', 'Albert', 'Bryan', 'Billy', 'Bruce', 'Willie', 'Jordan', 'Dylan', 'Alan', 'Ralph', 'Gabriel', 'Roy', 'Juan', 'Wayne', 'Eugene', 'Logan', 'Randy', 'Louis', 'Russell', 'Vincent', 'Philip', 'Bobby', 'Johnny', 'Bradley'],\n            imgDirectory: 'modules/npc-generator-t2k/images/US/Male'\n        },\n        \"Female\": {\n            firstNames: ['Mary', 'Jennifer', 'Linda', 'Patricia', 'Elizabeth', 'Susan', 'Jessica', 'Sarah', 'Karen', 'Nancy', 'Margaret', 'Lisa', 'Betty', 'Dorothy', 'Sandra', 'Ashley', 'Kimberly', 'Donna', 'Emily', 'Michelle', 'Carol', 'Amanda', 'Melissa', 'Deborah', 'Stephanie', 'Rebecca', 'Laura', 'Helen', 'Sharon', 'Cynthia', 'Kathleen', 'Amy', 'Shirley', 'Angela', 'Anna', 'Ruth', 'Brenda', 'Pamela', 'Nicole', 'Katherine', 'Samantha', 'Christine', 'Emma', 'Catherine', 'Debra', 'Rachel', 'Carolyn', 'Janet', 'Virginia', 'Maria', 'Heather', 'Diane', 'Julie', 'Joyce', 'Victoria', 'Olivia', 'Kelly', 'Christina', 'Lauren', 'Joan', 'Evelyn', 'Judith', 'Megan', 'Cheryl', 'Andrea', 'Hannah', 'Martha', 'Jacqueline', 'Frances', 'Gloria', 'Ann', 'Teresa', 'Kathryn', 'Sara', 'Janice', 'Jean', 'Alice', 'Madison', 'Doris', 'Abigail', 'Julia', 'Judy', 'Grace', 'Denise', 'Amber', 'Marilyn', 'Beverly', 'Danielle', 'Theresa', 'Sophia', 'Marie', 'Diana', 'Brittany', 'Natalie', 'Isabella', 'Charlotte', 'Rose', 'Alexis', 'Kayla'],\n            imgDirectory: 'modules/npc-generator-t2k/images/US/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Garcia', 'Miller', 'Davis', 'Rodriguez', 'Martinez', 'Hernandez', 'Lopez', 'Gonzalez', 'Wilson', 'Anderson', 'Thomas', 'Taylor', 'Moore', 'Jackson', 'Martin', 'Lee', 'Perez', 'Thompson', 'White', 'Harris', 'Sanchez', 'Clark', 'Ramirez', 'Lewis', 'Robinson', 'Walker', 'Young', 'Allen', 'King', 'Wright', 'Scott', 'Torres', 'Nguyen', 'Hill', 'Flores', 'Green', 'Adams', 'Nelson', 'Baker', 'Hall', 'Rivera', 'Campbell', 'Mitchell', 'Carter', 'Roberts', 'Gomez', 'Phillips', 'Evans', 'Turner', 'Diaz', 'Parker', 'Cruz', 'Edwards', 'Collins', 'Reyes', 'Stewart', 'Morris', 'Morales', 'Murphy', 'Cook', 'Rogers', 'Gutierrez', 'Ortiz', 'Morgan', 'Cooper', 'Peterson', 'Bailey', 'Reed', 'Kelly', 'Howard', 'Ramos', 'Kim', 'Cox', 'Ward', 'Richardson', 'Watson', 'Brooks', 'Chavez', 'Wood', 'James', 'Bennett', 'Gray', 'Mendoza', 'Ruiz', 'Hughes', 'Price', 'Alvarez', 'Castillo', 'Sanders', 'Patel', 'Myers', 'Long', 'Ross', 'Foster', 'Jimenez', 'Powell'],\n\t}\n    },\n    \"Poland\": {\n        \"Male\": {\n            firstNames: ['Adam', 'Adrian', 'Albert', 'Aleksander', 'Alfred', 'Andrzej', 'Antoni', 'Arkadiusz', 'Artur', 'Bartek', 'Bartłomiej', 'Benedykt', 'Benjamin', 'Bernard', 'Błażej', 'Bogdan', 'Bolesław', 'Bronisław', 'Cezary', 'Cyprian', 'Cyryl', 'Dalegor', 'Damian', 'Daniel', 'Dariusz', 'Dawid', 'Dominik', 'Dorian', 'Edward', 'Emil', 'Eryk', 'Fabian', 'Feliks', 'Ferdynand', 'Filip', 'Franciszek', 'Gabriel', 'Grzegorz', 'Henryk', 'Hubert', 'Ignacy', 'Igor', 'Iwo', 'Jacek', 'Jakub', 'Jan', 'Janusz', 'Jarosław', 'Jerzy', 'Joachim', 'Józef', 'Julian', 'Kacper', 'Kajetan', 'Karol', 'Kazimierz', 'Konrad', 'Krzysztof', 'Ksawery', 'Lech', 'Leon', 'Leonard', 'Leopold', 'Leszek', 'Ludwik', 'Łukasz', 'Maciej', 'Maksymilian', 'Marcin', 'Marek', 'Mariusz', 'Mateusz', 'Michał', 'Mieczysław', 'Mikołaj', 'Miłosz', 'Nikodem', 'Norbert', 'Olaf', 'Olgierd', 'Oscar', 'Patryk', 'Paweł', 'Piotr', 'Przemysław', 'Rafał', 'Robert', 'Ryszard', 'Sebastian', 'Sławomir', 'Stanisław', 'Stefan', 'Szymon', 'Tadeusz', 'Tomasz', 'Tymon', 'Tymoteusz', 'Wiktor', 'Witold', 'Władysław', 'Włodzimierz', 'Wojciech', 'Zbigniew', 'Zdzisław', 'Zenon', 'Zygmunt'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Poland/Male'\n        },\n        \"Female\": {\n            firstNames: ['Anna', 'Maria', 'Katarzyna', 'Małgorzata', 'Agnieszka', 'Barbara', 'Ewa', 'Krystyna', 'Elżbieta', 'Zofia', 'Janina', 'Teresa', 'Danuta', 'Halina', 'Irena', 'Magdalena', 'Joanna', 'Jadwiga', 'Stanisława', 'Bożena', 'Aleksandra', 'Monika', 'Grażyna', 'Stefania', 'Marta', 'Dorota', 'Marzena', 'Beata', 'Natalia', 'Wanda', 'Krzysztofa', 'Justyna', 'Karolina', 'Czesława', 'Kamila', 'Lucyna', 'Jolanta', 'Edyta', 'Alicja', 'Aneta', 'Paulina', 'Sylwia', 'Bożenna', 'Patrycja', 'Bogumiła', 'Eugenia', 'Iwona', 'Marlena', 'Weronika', 'Julianna', 'Emilia', 'Renata', 'Adrianna', 'Kornelia', 'Aldona', 'Milena', 'Elwira', 'Aurelia', 'Gabriela', 'Helena', 'Roksana', 'Angelika', 'Leokadia', 'Wiktoria', 'Zuzanna', 'Romana', 'Kalina', 'Leonia', 'Daria', 'Bogusława', 'Olga', 'Blanka', 'Julia', 'Nadia', 'Melania', 'Eryka', 'Lidia', 'Magda', 'Zdzisława', 'Maja', 'Brygida', 'Liliana', 'Anastazja', 'Rozalia', 'Dagmara', 'Marianna', 'Wiesława', 'Mirela', 'Felicia', 'Klaudia', 'Honorata', 'Ilona', 'Karina', 'Apolonia', 'Dominika', 'Iga', 'Pelagia', 'Tamara', 'Mirosława', 'Sandra', 'Ludwika', 'Cecylia', 'Polina', 'Klara', 'Laura', 'Roza', 'Amanda'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Poland/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Nowak', 'Kowalski', 'Wiśniewski', 'Dąbrowski', 'Lewandowski', 'Wójcik', 'Kamiński', 'Kowalczyk', 'Zieliński', 'Szymański', 'Woźniak', 'Kozłowski', 'Jankowski', 'Wojciechowski', 'Kwiatkowski', 'Kaczmarek', 'Mazur', 'Krawczyk', 'Piotrowski', 'Grabowski', 'Nowakowski', 'Pawłowski', 'Michalski', 'Nowicki', 'Adamczyk', 'Dudek', 'Zając', 'Wieczorek', 'Jabłoński', 'Król', 'Majewski', 'Olszewski', 'Jaworski', 'Wróbel', 'Malinowski', 'Pawlak', 'Witkowski', 'Walczak', 'Stępień', 'Górski', 'Rutkowski', 'Michalak', 'Sikora', 'Ostrowski', 'Baran', 'Duda', 'Szewczyk', 'Tomaszewski', 'Pietrzak', 'Marciniak', 'Wróblewski', 'Zalewski', 'Jakubowski', 'Jasiński', 'Zawadzki', 'Sadowski', 'Bąk', 'Chmielewski', 'Włodarczyk', 'Borkowski', 'Czarnecki', 'Sawicki', 'Sokołowski', 'Urbański', 'Kubiak', 'Maciejewski', 'Szczepański', 'Kucharski', 'Wilk', 'Kalinowski', 'Lis', 'Mazurek', 'Wysocki', 'Adamski', 'Kaźmierczak', 'Wasilewski', 'Sobczak', 'Czerwiński', 'Andrzejewski', 'Cieślak', 'Głowacki', 'Zakrzewski', 'Kołodziej', 'Sikorski', 'Krajewski', 'Gajewski', 'Szymczak', 'Szulc', 'Baranowski', 'Laskowski', 'Brzeziński', 'Makowski', 'Ziółkowski', 'Przybylski', 'Domański', 'Nowacki', 'Borowski', 'Błaszczyk', 'Chojnacki', 'Ciesielski', 'Mróz', 'Szczepaniak', 'Wesołowski', 'Krupa', 'Kaczmarczyk', 'Leszczyński', 'Lipiński', 'Kowalewski'],\n\t}\n    },\n    \"Sweden\": {\n        \"Male\": {\n            firstNames: ['Erik', 'Lars', 'Karl', 'Anders', 'Johan', 'Per', 'Nils', 'Olof', 'Hans', 'Arne', 'Jörgen', 'Björn', 'Thomas', 'Jan', 'Gunnar', 'Göran', 'Marcus', 'Fredrik', 'Mattias', 'Daniel', 'Magnus', 'Mikael', 'Peter', 'Håkan', 'Christer', 'Lennart', 'Stefan', 'Henrik', 'David', 'Kjell', 'Bo', 'Jonas', 'Roland', 'Oskar', 'Leif', 'Tomas', 'Patrik', 'Rolf', 'Kent', 'Sven', 'Martin', 'Ulf', 'Joakim', 'John', 'Ingvar', 'Robert', 'Bertil', 'Rickard', 'Gustav', 'Alexander', 'Benny', 'Ronnie', 'Roger', 'Tommy', 'Harry', 'Tony', 'Conny', 'Frank', 'Jimmy', 'Rune', 'Chrille', 'Billy', 'Morgan', 'Lasse', 'Pelle', 'Bosse', 'Niklas', 'Olle', 'Börje', 'Torbjörn', 'Viktor', 'Åke', 'Hasse', 'Sebastian', 'Robin', 'Jesper', 'Dennis', 'Tobias', 'Simon', 'Anton', 'Niclas', 'Christoffer', 'Urban', 'Stig', 'Pär', 'Uno', 'Åsa', 'Mats', 'Tim', 'Jonathan', 'Bengt', 'Ludvig', 'Eddie', 'Max', 'Emil', 'Linus', 'Ville', 'Samuel', 'Adam', 'Jakob', 'Hampus', 'Gabriel', 'Filip'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Sweden/Male'\n        },\n        \"Female\": {\n            firstNames: ['Maria', 'Anna', 'Margareta', 'Elisabeth', 'Eva', 'Birgitta', 'Kristina', 'Karin', 'Elisabet', 'Marie', 'Ingrid', 'Christina', 'Lena', 'Helena', 'Inger', 'Johanna', 'Sofia', 'Kerstin', 'Marianne', 'Linda', 'Emma', 'Cecilia', 'Katarina', 'Sara', 'Malin', 'Ingegerd', 'Anita', 'Ann', 'Susanne', 'Ulla', 'Mariana', 'Elin', 'Monica', 'Carina', 'Linnéa', 'Camilla', 'Ulrika', 'Siv', 'Emelie', 'Åsa', 'Elsa', 'Annette', 'Hanna', 'Annika', 'Britt', 'Madeleine', 'Viola', 'Ellinor', 'Maj', 'Louise', 'Alice', 'Julia', 'Ebba', 'Agneta', 'Viktoria', 'Isabella', 'Liselotte', 'Gudrun', 'Linnea', 'Therese', 'Charlotta', 'Rut', 'Sonja', 'Magdalena', 'Amanda', 'Carolina', 'Gunilla', 'Nina', 'Astrid', 'Frida', 'Martina', 'Birgit', 'Erika', 'Ida', 'Josefine', 'Yvonne', 'Maud', 'Sigrid', 'Paula', 'Linn', 'Jenny', 'Stina', 'Vera', 'Tove', 'Hedvig', 'Beatrice', 'Klara', 'Anneli', 'Ingela', 'Mia', 'Rebecca', 'Inga', 'Irma', 'Ester', 'Catarina', 'Liselott', 'Solveig', 'Barbro', 'Sylvia', 'Amanda', 'Veronica', 'Caroline', 'Agnes', 'Alexandra'],\n            imgDirectory: 'modules/npc-generator-t2k/images/Sweden/Female'\n        },\n\t\"Both\": {\n            lastNames: ['Andersson', 'Johansson', 'Karlsson', 'Nilsson', 'Eriksson', 'Larsson', 'Olsson', 'Persson', 'Svensson', 'Gustafsson', 'Pettersson', 'Jonsson', 'Jansson', 'Hansson', 'Bengtsson', 'Jönsson', 'Lindberg', 'Jakobsson', 'Magnusson', 'Olofsson', 'Lindström', 'Lindqvist', 'Bergström', 'Lundberg', 'Mattsson', 'Berglund', 'Fredriksson', 'Sandberg', 'Henriksson', 'Forsberg', 'Sjöberg', 'Wallin', 'Engström', 'Axelsson', 'Danielsson', 'Ström', 'Björk', 'Holm', 'Berg', 'Arvidsson', 'Isaksson', 'Fransson', 'Holmberg', 'Lundqvist', 'Månsson', 'Pålsson', 'Löfgren', 'Björklund', 'Hermansson', 'Lundin', 'Sundberg', 'Wikström', 'Samuelsson', 'Bergman', 'Frisk', 'Nyström', 'Gunnarsson', 'Björnsson', 'Eklund', 'Nordström', 'Dahlberg', 'Nyberg', 'Blomqvist', 'Lööf', 'Söderberg', 'Lundström', 'Johnsson', 'Lindgren', 'Eliasson', 'Pihl', 'Hellström', 'Sundström', 'Hedlund', 'Gustavsson', 'Bäckström', 'Lund', 'Söderström', 'Börjesson', 'Falk', 'Gustafson', 'Fält', 'Edlund', 'Malm', 'Svenson', 'Nyman', 'Blom', 'Oskarsson', 'Lind', 'Granberg', 'Bergqvist', 'Lundgren', 'Berggren', 'Bäck', 'Sandström', 'Norberg', 'Andreasson', 'Håkansson', 'Fall', 'Forslund', 'Viklund', 'Lindholm', 'Sundqvist', 'Hellberg'],\n\t}\n    }\n};\n\n// Create a dialog for the user to select a faction, gender, and the number of tokens to create\nlet d = new Dialog({\n    title: 'Generate an NPC',\n    content: `\n        <form>\n            <div class=\"form-group\">\n                <label for=\"faction\">Faction:</label>\n                <select id=\"faction\" name=\"faction\">\n                    <option value=\"Soviet\" selected>Soviet</option>\n                    <option value=\"US\">US</option>\n                    <option value=\"Sweden\">Sweden</option>\n                    <option value=\"Poland\">Poland</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"gender\">Gender:</label>\n                <select id=\"gender\" name=\"gender\">\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Alternate\" selected>Alternate</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"level\">Power Level:</label>\n                <select id=\"level\" name=\"level\">\n                    <option value=\"0\">Low</option>\n                    <option value=\"1\">Medium</option>\n                    <option value=\"2\">High</option>\n                    <option value=\"Random\" selected>Random</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"gear\">Gear:</label>\n                <select id=\"gear\" name=\"gear\">\n                    <option value=\"Typical\">Typical</option>\n                    <option value=\"Full suit\">Full suit</option>\n                    <option value=\"Random\" selected>Random</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"number\">Amount:</label>\n                <input id=\"number\" name=\"number\" type=\"number\" min=\"1\" value=\"1\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"pingToken\">Ping:</label>\n                <input type=\"checkbox\" id=\"pingToken\" checked name=\"pingToken\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"panView\">Pan View:</label>\n                <input type=\"checkbox\" id=\"panView\" checked name=\"panView\">\n            </div>\n        </form>\n    `,\n    buttons: {\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: 'Cancel'\n        },\n        ok: {\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: 'Generate',\n            callback: async (html) => {\n                let factionName = html.find('[name=\"faction\"]').val();\n                let gender = html.find('[name=\"gender\"]').val();\n                let randomItems = html.find('[name=\"gear\"]').val();\n                let number = html.find('[name=\"number\"]').val();\n                let level = html.find('[name=\"level\"]').val();\n                let pingToken = html.find('[name=\"pingToken\"]');\n                let panView = html.find('[name=\"panView\"]');\n\n                // If \"Alternate\" is selected, alternate between \"Male\" and \"Female\"\n                if (gender === \"Alternate\") {\n                    for (let i = 0; i < number; i++) {\n                        let genderToggle = i % 2 === 0 ? \"Male\" : \"Female\";\n                        let faction = factions[factionName][genderToggle];\n\t\t\t                  let factionboth = factions[factionName][\"Both\"];\n                        await createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView, level);\n                    }\n                } else {\n                    let faction = factions[factionName][gender];\n\t  \t              let factionboth = factions[factionName][\"Both\"];\n                    for (let i = 0; i < number; i++) {\n                        await createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView, level);\n                    }\n                }\n            }\n        }\n\n    },\n    default: 'ok'\n});\n\nd.render(true);\n\nasync function createRandomActor(faction, factionboth, factionName, randomItems, pingToken, panView, level) {\n\n    let tempLevel = 0;\n    if (level === 'Random') {\n      tempLevel = Math.floor(Math.random() * 3);\n    } else {\n      tempLevel = Number(level);\n    }\n\n    function getRandomElements(array, numElements, factionName) {\n      let result = [];\n      let tempArray = [...array];\n      ranElements = Math.floor(Math.random() * (numElements));\n      if ((factionName=== 'US') || (factionName=== 'Soviet')) {\n        ranElements = 1;\n      } else {\n        ranElements = Math.floor(Math.random() * (numElements + 1));\n      }\n      for (let i = 0; i < ranElements; i++) {\n        if(tempArray.length === 0) break;\n        let index = Math.floor(Math.random() * tempArray.length);\n        result.push(tempArray[index]);\n        tempArray.splice(index, 1);\n      }\n      return result;\n    }\n\n    function skewedRandomAge(min, max, mean, stdDev) {\n      let skewNormal = () => {\n        let u, v, num;\n        do {\n          u = Math.random() * 2 - 1;\n          v = Math.random() * 2 - 1;\n          num = u * u + v * v;\n        } while (num >= 1 || num === 0);\n        num = u * Math.sqrt((-2.0 * Math.log(num)) / num);\n        num = mean + stdDev * num; // Translate and scale\n        num = Math.floor(num); // Convert to integer\n        return Math.max(min, Math.min(num, max)); // Constrain between min and max\n      };\n\n      return skewNormal();\n    }\n\n    // Function to distribute points over an array of skills or attributes\n    function distributePoints(skillsOrAttributes, factionName, minPoints, maxPoints, minValue = 0, maxValue = 4, tempLevel = 3) {\n      const skillScores = ['–', 'D', 'C', 'B', 'A'];\n\n      // First assign the minimum value to all\n      let values = Object.fromEntries(skillsOrAttributes.map(skillOrAttribute => [skillOrAttribute, skillScores[minValue]]));\n\n      let pointsToDistribute = Math.floor(Math.random() * (maxPoints - minPoints + 1) + minPoints);\n      let currentValue = 0;\n\n      // Distribute remaining points randomly\n      while(pointsToDistribute > 0) {\n          let randomSkillOrAttribute = skillsOrAttributes[Math.floor(Math.random() * skillsOrAttributes.length)];\n          currentValue = skillScores.indexOf(values[randomSkillOrAttribute]);\n\n          // Only add point if we haven't reached the maximum value\n          if (currentValue < maxValue) {\n              values[randomSkillOrAttribute] = skillScores[currentValue + 1];\n              pointsToDistribute--;\n          }\n        //  pointsToDistribute--;\n      }\n    //  if (factionName === 'Soviet' || factionName === 'US') {\n      //    if (Math.random() < 0.9 && values['rangedCombat'] !== 'A') {\n            //  currentValue = skillScores.indexOf(values['rangedCombat']);\n            //  values['rangedCombat'] = skillScores[currentValue + 1];\n          //  values['rangedCombat']=skillScores[skillScores.indexOf(values['rangedCombat']) + 1];\n      //    }\n       //}\n       //if (tempLevel == 2) {\n        // skillsOrAttributes['rangedCombat'] = 'A';\n       //}\n\n\n      // Transform die score into skill score.\n      for(let key in values) {\n          if (key=='rangedCombat') {\n            if (tempLevel == 2 && values[key] !== 'A'){\n              values[key]=skillScores[skillScores.indexOf(values[key]) + 1];\n            }\n            if ((factionName === 'Soviet' || factionName === 'US') && (Math.random() < 0.9) &&(values[key] !== 'A')) {\n              values[key]=skillScores[skillScores.indexOf(values[key]) + 1];\n            }\n          }\n          if(values[key] === '–') {\n              delete values[key]; // remove skills with score '–'\n          } else {\n              values[key] = { score: values[key] };\n          }\n      }\n      return values;\n    }\n\n\n    let firstName = faction.firstNames[Math.floor(Math.random() * faction.firstNames.length)];\n    let lastName = factionboth.lastNames[Math.floor(Math.random() * factionboth.lastNames.length)];\n\n    let images = await FilePicker.browse(\"data\", faction.imgDirectory);\n    let img = images.files[Math.floor(Math.random() * images.files.length)];\n\n    // Define attributes and skills\n    let attributes = distributePoints(['str', 'agl', 'int', 'emp'], factionName, ((tempLevel*3)), (2+(tempLevel*4)), 1, 4, tempLevel); // Attributes start at 'D'\n    let skillsAmount = 9+(tempLevel*5);\n    let skills = distributePoints(['heavyWeapons', 'closeCombat', 'stamina', 'driving', 'mobility', 'rangedCombat', 'recon', 'survival', 'tech', 'command', 'persuasion', 'medicalAid'], factionName, 4, skillsAmount, 0, 4, tempLevel);\n    let cufScore = 0\n    if (tempLevel == 0) {\n      cufScore = ['D', 'C', 'B', 'A'][Math.floor(Math.random() * 3)];\n    } else if (tempLevel == 1) {\n      cufScore = ['D', 'C', 'B', 'A'][Math.floor(Math.random() * 4)];\n    } else {\n      cufScore = ['D', 'C', 'B', 'A'][Math.floor(Math.random() * 3)+1];\n    }\n\n    let age = skewedRandomAge(16, 60, 22, 10);\n\n    let actorData = {\n        name: `${firstName} ${lastName}`,\n        type: \"npc\",\n        img: img,\n        token: {\n            img: img\n        },\n        system: {\n           attributes: attributes,\n           skills: skills,\n           bio: {\n             nationality: factionName,\n             militaryRank: \"\",\n             age: age+(tempLevel*5)\n          },\n          cuf: {\n            score: cufScore\n          },\n        },\n        folder: npcFolder.id, // Assign the actor to the \"NPC\" folder\n    };\n\n    let createdActor = await Actor.create(actorData);\n\n\n    // Fetch the item data for the items we want to assign\n    let itemNames = ['Rifle Butt', 'Knife', 'Unarmed'];\n    let armorItems = [];\n    let factionWeapons = [];\n    let randomWeapons = [];\n    let factionItems = [];\n    let helmetItems = [];\n    let randomHelmet = [];\n    let randomArmor = [];\n\n    if (factionName=== 'Soviet') {\n      factionWeapons = ['AKM', 'AK-74', 'PM Makarov', 'PSM', 'SVD-63 Dragunov', 'PKM'];\n      factionWeightedWeapons = ['AK-74', 'AKM'];\n      typicalSoldierItems = ['AK-74', 'Steel Helmet', 'Fatigues', '5.45x39mm, 30-round Mag'];\n      factionItems = ['Frag Grenade', '7.62x39mm, 30-round Mag', 'Anti Tank Grenade', 'Field Ration', 'Field Ration', 'Clean Water', 'RPG-7V', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Tools, Basic', 'Protective Mask', 'Radiacmeter', 'Chemical Agent Detector', 'Atropine Autoinjector', 'Wild Food', 'Improvised Explosives, 1 Unit', 'Fatigues', 'Smoke Grenade'];\n      armorItems = ['Flak Jacket', 'Plate Vest'];\n      helmetItems = ['Steel Helmet', 'Soviet SSH-68'];\n    } else if (factionName=== 'US') {\n      factionWeapons = ['M16A1', 'M16A2', 'M40A3', 'M4', 'M4A1', 'M1911A1', 'M60', 'M240B'];\n      factionWeightedWeapons = ['M16A1', 'M16A2', 'M4', 'M4A1'];\n      typicalSoldierItems = ['M16A1', 'Kevlar Helmet', 'Fatigues', '5.56x45mm, 30-round Mag'];\n      factionItems = ['Frag Grenade', '5.56x45mm, 30-round Mag', 'Anti Tank Grenade', 'Field Ration','Field Ration', 'Clean Water', 'M72A3 LAW', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Tools, Basic', 'Protective Mask', 'Radiacmeter', 'Chemical Agent Detector', 'Atropine Autoinjector', 'Wild Food', 'Plastic Explosives, 1 Unit', 'M18 Claymore Directional Mine', 'Fatigues', , 'Smoke Grenade'];\n      armorItems = ['Flak Jacket', 'Plate Vest'];\n      helmetItems = ['Kevlar Helmet', 'US PASGT'];\n    } else if (factionName=== 'Sweden') {\n      factionWeapons = ['Rock','Ak 4', 'Ak 5', 'Ag 90','Bolt-action Rifle', 'Double-barrelled Shotgun', 'Double-barrelled Shotgun, sawed-off', 'Police Pistol', 'Service Revolver', 'Pipe Gun (rifle)','Pipe Gun (shotgun)', 'Crossbow', 'Hunting Bow', 'Improvised Bow', 'Axe', 'Spiked Bat', 'Club', 'Lever-action Rifle', 'KSP 90', 'KSP 88', 'Kpist m/45', 'Combat Pistol', 'Zip Gun'];\n      typicalSoldierItems = ['Ak 5', 'Swedish Hjälm 90', 'Fatigues', '5.56x45mm, 30-round Mag'];\n      factionItems = ['Swedish Hjälm 90', '5.56x45mm, 30-round Mag','Pskott m/86', 'Pist 88', 'Frag Grenade', 'Anti Tank Grenade', 'Field Ration', 'Domestic Food', 'Clean Water', 'Domestic Food', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Lockpicks', 'Tools, Basic', 'Fishing Gear', 'Protective Mask',  'Wild Food', 'Dynamite Stick', 'Improvised Explosives, 1 Unit', 'Molotov Cocktail', 'Improvised Grenade'];\n      helmetItems = [];\n      armorItems = [];\n    } else {\n      factionWeapons = ['Rock','AKM (Polish)','P-83','PKM (Polish)','PM-84','PMK-60','RPK (Polish)','SWD','Bolt-action Rifle', 'Double-barrelled Shotgun', 'Double-barrelled Shotgun, sawed-off', 'Police Pistol', 'Service Revolver', 'Pipe Gun (rifle)','Pipe Gun (shotgun)', 'Crossbow', 'Hunting Bow', 'Improvised Bow', 'Axe', 'Spiked Bat', 'Club', 'Lever-action Rifle', 'Combat Pistol', 'Zip Gun'];\n      typicalSoldierItems = ['AKM', 'Polish WZ75', 'Fatigues', '7.62x39mm, 30-round Mag'];\n      factionItems = ['Polish WZ75', '7.62x39mm, 30-round Mag', 'RPG-7V (Polish)','Frag Greanade', 'Anti Tank Grenade', 'Field Ration', 'Domestic Food', 'Clean Water', 'Domestic Food', 'Clean Water','Tent, Small', 'Personal Medkit', 'Pain Reliever', 'Antibiotics', 'Backpack', 'Binoculars', 'Compass', 'Flashlight', 'Raingear', 'Sleeping Bag', 'Lockpicks', 'Tools, Basic', 'Protective Mask', 'Fishing Gear', 'Wild Food', 'Dynamite Stick', 'Improvised Explosives, 1 Unit', 'Fatigues', 'Molotov Cocktail', 'Improvised Grenade'];\n      helmetItems = [];\n      armorItems = [];\n    }\n\n    if (randomItems === 'Random') {\n      let randomItems = getRandomElements(factionItems, 4+(tempLevel*2));\n      if ((factionName=== 'US') || (factionName=== 'Soviet')) {\n        if (Math.random() < 0.3) {\n          randomWeapons = typicalSoldierItems;\n          randomHelmet = [];\n        } else {\n          randomWeapons = getRandomElements(factionWeightedWeapons, 1, factionName);\n          randomHelmet = getRandomElements(helmetItems, 1);\n        }\n      } else {\n        if (tempLevel == 2) {\n          randomWeapons = getRandomElements(factionWeapons, 1, 'US');\n        } else {\n          randomWeapons = getRandomElements(factionWeapons, 1, factionName);\n        }\n        randomHelmet = getRandomElements(helmetItems, 1);\n      }\n      if (tempLevel == 2) {\n        armorItems = ['Flak Jacket', 'Plate Vest'];\n        randomArmor = getRandomElements(armorItems, 1);\n      } else {\n        if (Math.random() < 0.3) {\n          randomArmor = getRandomElements(armorItems, 1);\n        } else {\n          randomArmor = [];\n        }\n      }\n      itemNames = [...itemNames, ...randomArmor, ...randomHelmet, ...randomItems, ...randomWeapons];\n    } else if (randomItems === 'Typical') {\n      itemNames = [...itemNames, ...typicalSoldierItems];\n    } else {\n      itemNames = [...itemNames, ...armorItems, ...helmetItems, ...factionItems, ...factionWeapons];\n    }\n\n    let items = [];\n    for (let itemName of itemNames) {\n      let item = game.items.getName(itemName);\n      if (item) {\n        items.push(item);\n      }\n    }\n\n    await createdActor.createEmbeddedDocuments(\"Item\", items);\n\n    if (canvas.scene) {\n      // Get the viewed rectangle\n      const viewRect = canvas.dimensions.rect;\n\n      // Calculate the center of the viewed rectangle in grid units\n      const x = viewRect.x + (viewRect.width / 2);\n      const y = viewRect.y + (viewRect.height / 2);\n\n      const tDoc = await createdActor.getTokenDocument({ x:x, y: y });\n      const createdTokens = await canvas.scene.createEmbeddedDocuments('Token', [tDoc]);\n\n      // get the token id\n      let tokenId = createdTokens[0]._id;\n\n      // get the Token instance from the current scene\n      let tokenInstance = canvas.scene.getEmbeddedDocument('Token', tokenId);\n\n      if (panView.is(':checked')) {\n        canvas.animatePan(tokenInstance);\n      }\n      if (pingToken.is(':checked')) {\n        canvas.ping(tokenInstance);\n      }\n\n    } else {\n        console.warn(\"No active scene available to place token.\");\n    }\n\n}","flags":{"core":{"sourceId":"Macro.uGtm1p5bWsZjlMIV"}},"_stats":{"systemId":"t2k4e","systemVersion":"10.2.0","coreVersion":"10.291","createdTime":1685961469660,"modifiedTime":1686077022126,"lastModifiedBy":"NbJ83QqO5LxARCdR"},"ownership":{"default":0,"NbJ83QqO5LxARCdR":3},"folder":null,"sort":0,"_id":"mF2leo3gZbdWSUqb"}
